INFO:Detectors:
PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#184-228) uses arbitrary from in transferFrom: _wrappedPunk.transferFrom(_loan.borrower,address(this),_loan.nftCollateralTokenId) (src/lib/callbacks/PurchaseBundler.sol#199)
PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#184-228) uses arbitrary from in transferFrom: collection.transferFrom(_loan.borrower,address(this),_loan.nftCollateralTokenId) (src/lib/callbacks/PurchaseBundler.sol#214)
PurchaseBundler._handleTax(IMultiSourceLoan.Loan,uint256) (src/lib/callbacks/PurchaseBundler.sol#294-318) uses arbitrary from in transferFrom: ERC20(principalAddress).safeTransferFrom(borrower,tranche.lender,taxCost - feeTax) (src/lib/callbacks/PurchaseBundler.sol#310)
PurchaseBundler._handleTax(IMultiSourceLoan.Loan,uint256) (src/lib/callbacks/PurchaseBundler.sol#294-318) uses arbitrary from in transferFrom: ERC20(principalAddress).safeTransferFrom(borrower,protocolFee.recipient,totalFeeTax) (src/lib/callbacks/PurchaseBundler.sol#316)
MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#122-157) uses arbitrary from in transferFrom: ERC721(nftCollateralAddress).transferFrom(borrower,address(this),executionData.tokenId) (src/lib/loans/MultiSourceLoan.sol#151)
MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#160-235) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,_renegotiationOffer.principalAmount - _loan.principalAmount) (src/lib/loans/MultiSourceLoan.sol#194-198)
MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#160-235) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,netNewLender) (src/lib/loans/MultiSourceLoan.sol#208)
MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#365-410) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,_renegotiationOffer.principalAmount - _renegotiationOffer.fee) (src/lib/loans/MultiSourceLoan.sol#393-395)
MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#365-410) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_protocolFee.recipient,_renegotiationOffer.fee.mulDivUp(_loan.protocolFee,_PRECISION)) (src/lib/loans/MultiSourceLoan.sol#398-402)
MultiSourceLoan._processOldTranche(address,address,address,IMultiSourceLoan.Tranche,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#620-669) uses arbitrary from in transferFrom: asset.safeTransferFrom(_borrower,_tranche.lender,oldLenderDebt - _remainingNewLender) (src/lib/loans/MultiSourceLoan.sol#657)
MultiSourceLoan._processOldTranche(address,address,address,IMultiSourceLoan.Tranche,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#620-669) uses arbitrary from in transferFrom: asset.safeTransferFrom(_lender,_tranche.lender,oldLenderDebt) (src/lib/loans/MultiSourceLoan.sol#662)
MultiSourceLoan._handleProtocolFeeForFee(address,address,uint256,address) (src/lib/loans/MultiSourceLoan.sol#709-715) uses arbitrary from in transferFrom: ERC20(_principalAddress).safeTransferFrom(_lender,_feeRecipient,_fee) (src/lib/loans/MultiSourceLoan.sol#713)
MultiSourceLoan._processRepayments(IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#903-945) uses arbitrary from in transferFrom: asset.safeTransferFrom(loan.borrower,tranche.lender,repayment) (src/lib/loans/MultiSourceLoan.sol#922)
MultiSourceLoan._processRepayments(IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#903-945) uses arbitrary from in transferFrom: asset.safeTransferFrom(loan.borrower,_protocolFee.recipient,totalProtocolFee) (src/lib/loans/MultiSourceLoan.sol#942)
MultiSourceLoan._processOffersFromExecutionData(address,address,address,address,uint256,uint256,IMultiSourceLoan.OfferExecution[]) (src/lib/loans/MultiSourceLoan.sol#959-1040) uses arbitrary from in transferFrom: ERC20(offer.principalAddress).safeTransferFrom(lender,_principalReceiver,amount - fee) (src/lib/loans/MultiSourceLoan.sol#1012)
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92-105) uses arbitrary from in transferFrom: ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#96)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#115-130) uses arbitrary from in transferFrom: weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#120)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#97-126) sends eth to arbitrary user
	Dangerous calls:
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#119)
LidoEthBaseInterestAllocator._exchangeAndSendWeth(address,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#153-159) sends eth to arbitrary user
	Dangerous calls:
	- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#270-345) uses a weak PRNG: "idx = (baseIdx - i) % totalQueues (src/lib/pools/Pool.sol#315)" 
Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#547-583) uses a weak PRNG: "idx = (pendingIndex + i) % totalQueues (src/lib/pools/Pool.sol#561)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92-105) ignores return value by ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#96)
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92-105) ignores return value by ERC20(_usdc).transfer(pool,delta_scope_0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#101)
AaveUsdcBaseInterestAllocator.transferAll() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#108-118) ignores return value by ERC20(usdc).transfer(pool,total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#115)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#115-130) ignores return value by weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#120)
LidoEthBaseInterestAllocator._exchangeAndSendWeth(address,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#153-159) ignores return value by weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#205)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#209)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#210)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#211)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#212)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#213)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#214)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#193)
	- result = prod0 * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#220)
Math.invMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#243-289) performs a multiplication on the result of a division:
	- quotient = gcd / remainder (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#265)
	- (gcd,remainder) = (remainder,gcd - remainder * quotient) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#267-274)
FixedPointMathLib.rpow(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#71-158) performs a multiplication on the result of a division:
	- x = xxRound_rpow_asm_0 / scalar (lib/solmate/src/utils/FixedPointMathLib.sol#129)
	- zx_rpow_asm_0 = z * x (lib/solmate/src/utils/FixedPointMathLib.sol#134)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
LidoEthBaseInterestAllocator.getBaseApr() (src/lib/pools/LidoEthBaseInterestAllocator.sol#76-90) uses a dangerous strict equality:
	- aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#86)
LidoEthBaseInterestAllocator.getBaseAprWithUpdate() (src/lib/pools/LidoEthBaseInterestAllocator.sol#93-102) uses a dangerous strict equality:
	- lidoData.aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#98)
Pool._outstandingApr(Pool.OutstandingValues) (src/lib/pools/Pool.sol#748-753) uses a dangerous strict equality:
	- __outstandingValues.principalAmount == 0 (src/lib/pools/Pool.sol#749)
Pool._reallocate() (src/lib/pools/Pool.sol#601-619) uses a dangerous strict equality:
	- currentBalance == 0 (src/lib/pools/Pool.sol#604)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#668-712) uses a dangerous strict equality:
	- totalReceived == 0 (src/lib/pools/Pool.sol#676)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#668-712) uses a dangerous strict equality:
	- queueAccounting.thisQueueFraction == 0 (src/lib/pools/Pool.sol#693)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Contract locking ether found:
	Contract AddressManager (src/lib/AddressManager.sol#12-105) has payable functions:
	 - AddressManager.add(address) (src/lib/AddressManager.sol#47-49)
	 - AddressManager.addToWhitelist(address) (src/lib/AddressManager.sol#53-60)
	 - AddressManager.removeFromWhitelist(address) (src/lib/AddressManager.sol#65-69)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Reentrancy in MultiSourceLoan._processOffersFromExecutionData(address,address,address,address,uint256,uint256,IMultiSourceLoan.OfferExecution[]) (src/lib/loans/MultiSourceLoan.sol#959-1040):
	External calls:
	- _validateOfferExecution(thisOfferExecution,_tokenId,offer.lender,_duration,thisOfferExecution.lenderOfferSignature,protocolFee.fraction,totalAmount) (src/lib/loans/MultiSourceLoan.sol#982-990)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#778)
	State variables written after the call(s):
	- _used[lender][offer.offerId] += amount (src/lib/loans/MultiSourceLoan.sol#1014)
	BaseLoan._used (src/lib/loans/BaseLoan.sol#49) can be used in cross function reentrancies:
	- BaseLoan.getUsedCapacity(address,uint256) (src/lib/loans/BaseLoan.sol#183-185)
	- isOfferCancelled[lender][offer.offerId] = true (src/lib/loans/MultiSourceLoan.sol#1016)
	BaseLoan.isOfferCancelled (src/lib/loans/BaseLoan.sol#52) can be used in cross function reentrancies:
	- BaseLoan.cancelOffer(uint256) (src/lib/loans/BaseLoan.sol#152-157)
	- BaseLoan.isOfferCancelled (src/lib/loans/BaseLoan.sol#52)
Reentrancy in UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#323-334):
	External calls:
	- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
	State variables written after the call(s):
	- delete _vaultERC721s[_collection][_tokenId] (src/lib/UserVault.sol#331)
	UserVault._vaultERC721s (src/lib/UserVault.sol#28) can be used in cross function reentrancies:
	- UserVault.ERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#139-141)
	- UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#291-297)
	- UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#323-334)
Reentrancy in UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#336-347):
	External calls:
	- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
	State variables written after the call(s):
	- delete _vaultOldERC721s[_collection][_tokenId] (src/lib/UserVault.sol#344)
	UserVault._vaultOldERC721s (src/lib/UserVault.sol#31) can be used in cross function reentrancies:
	- UserVault.OldERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#143-145)
	- UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#299-308)
	- UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#336-347)
Reentrancy in Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220):
	External calls:
	- IBaseInterestAllocator(cachedAllocator).transferAll() (src/lib/pools/Pool.sol#206)
	- asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#207)
	- asset.approve(proposedAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#209)
	State variables written after the call(s):
	- getBaseInterestAllocator = proposedAllocator (src/lib/pools/Pool.sol#211)
	Pool.getBaseInterestAllocator (src/lib/pools/Pool.sol#85) can be used in cross function reentrancies:
	- Pool._getUndeployedAssets() (src/lib/pools/Pool.sol#594-597)
	- Pool._reallocate() (src/lib/pools/Pool.sol#601-619)
	- Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220)
	- Pool.getBaseInterestAllocator (src/lib/pools/Pool.sol#85)
	- Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#348-373)
	- getProposedBaseInterestAllocator = address(0) (src/lib/pools/Pool.sol#212)
	Pool.getProposedBaseInterestAllocator (src/lib/pools/Pool.sol#83) can be used in cross function reentrancies:
	- Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220)
	- Pool.getProposedBaseInterestAllocator (src/lib/pools/Pool.sol#83)
	- Pool.setBaseInterestAllocator(address) (src/lib/pools/Pool.sol#185-192)
	- getProposedBaseInterestAllocatorSetTime = type()(uint256).max (src/lib/pools/Pool.sol#213)
	Pool.getProposedBaseInterestAllocatorSetTime (src/lib/pools/Pool.sol#87) can be used in cross function reentrancies:
	- Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getProposedBaseInterestAllocatorSetTime (src/lib/pools/Pool.sol#87)
	- Pool.setBaseInterestAllocator(address) (src/lib/pools/Pool.sol#185-192)
Reentrancy in Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#270-345):
	External calls:
	- _queueClaimAll(proRataLiquid + getAvailableToWithdraw,pendingQueueIndex) (src/lib/pools/Pool.sol#300)
		- IBaseInterestAllocator(baseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#633)
	State variables written after the call(s):
	- _deployedQueues[lastQueueIndex] = newPendingQueue (src/lib/pools/Pool.sol#306)
	Pool._deployedQueues (src/lib/pools/Pool.sol#100) can be used in cross function reentrancies:
	- Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#785-791)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getDeployedQueue(uint256) (src/lib/pools/Pool.sol#246-248)
	- _pendingQueueIndex = lastQueueIndex (src/lib/pools/Pool.sol#337)
	Pool._pendingQueueIndex (src/lib/pools/Pool.sol#104) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#496-513)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#547-583)
	- Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#785-791)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getPendingQueueIndex() (src/lib/pools/Pool.sol#258-260)
	- i < totalQueues - 1 (src/lib/pools/Pool.sol#314)
	Pool._queueAccounting (src/lib/pools/Pool.sol#108) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#496-513)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#547-583)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getAccountingValuesForQueue(uint256) (src/lib/pools/Pool.sol#265-267)
	- _queueAccounting[idx].netPoolFraction -= uint128(thisQueueAccounting.netPoolFraction.mulDivDown(sharesPendingWithdrawal,totalSupplyCached)) (src/lib/pools/Pool.sol#320-321)
	Pool._queueAccounting (src/lib/pools/Pool.sol#108) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#496-513)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#547-583)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getAccountingValuesForQueue(uint256) (src/lib/pools/Pool.sol#265-267)
	- delete _queueAccounting[lastQueueIndex] (src/lib/pools/Pool.sol#332)
	Pool._queueAccounting (src/lib/pools/Pool.sol#108) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#496-513)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#547-583)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167)
	- Pool.getAccountingValuesForQueue(uint256) (src/lib/pools/Pool.sol#265-267)
	- totalSupply -= sharesPendingWithdrawal (src/lib/pools/Pool.sol#341)
	ERC20.totalSupply (lib/solmate/src/tokens/ERC20.sol#31) can be used in cross function reentrancies:
	- ERC4626._convertToAssets(uint256,Math.Rounding) (src/lib/pools/ERC4626.sol#152-154)
	- ERC4626._convertToShares(uint256,Math.Rounding) (src/lib/pools/ERC4626.sol#147-149)
	- ERC20._mint(address,uint256) (lib/solmate/src/tokens/ERC20.sol#183-193)
	- ERC20.totalSupply (lib/solmate/src/tokens/ERC20.sol#31)
Reentrancy in MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#445-461):
	External calls:
	- (liquidated,liquidation) = _liquidateLoan(_loanId,_loan,_loan.tranche.length == 1 && ! getLoanManagerRegistry.isLoanManager(_loan.tranche[0].lender)) (src/lib/loans/MultiSourceLoan.sol#454-456)
		- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loan.tranche[0].lender,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#105-107)
		- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),liquidator,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#113)
		- liquidation = ILoanLiquidator(liquidator).liquidateLoan(_loanId,_loan.nftCollateralAddress,_loan.nftCollateralTokenId,_loan.principalAddress,_liquidationAuctionDuration,_loan.principalAmount.mulDivDown(MIN_BID_LIQUIDATION,_BPS),msg.sender) (src/lib/LiquidationHandler.sol#114-122)
	State variables written after the call(s):
	- delete _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#458)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
Reentrancy in MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#315-362):
	External calls:
	- (newLoanId,offerIds,loan,totalFee) = _processOffersFromExecutionData(borrower,executionData.principalReceiver,principalAddress,nftCollateralAddress,executionData.tokenId,executionData.duration,offerExecution) (src/lib/loans/MultiSourceLoan.sol#344-353)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#778)
	- _processRepayments(_loan) (src/lib/loans/MultiSourceLoan.sol#354)
		- ILoanManager(tranche.lender).loanRepayment(tranche.loanId,tranche.principalAmount,tranche.aprBps,tranche.accruedInterest,loan.protocolFee,tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#927-934)
	State variables written after the call(s):
	- _loans[newLoanId] = loan.hash() (src/lib/loans/MultiSourceLoan.sol#358)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
	- delete _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#359)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
Reentrancy in MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#160-235):
	External calls:
	- (totalAccruedInterest,totalAnnualInterest,None) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated,0) (src/lib/loans/MultiSourceLoan.sol#179-180)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
	- (totalAccruedInterest,totalAnnualInterest,netNewLender) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated,netNewLender) (src/lib/loans/MultiSourceLoan.sol#203-204)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
	State variables written after the call(s):
	- _loans[newLoanId] = _loan.hash() (src/lib/loans/MultiSourceLoan.sol#227)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
	- delete _loans[_renegotiationOffer.loanId] (src/lib/loans/MultiSourceLoan.sol#228)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
Reentrancy in MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#238-312):
	External calls:
	- (accruedInterest,thisProtocolFee) = _processOldTranche(_renegotiationOffer.lender,_loan.borrower,_loan.principalAddress,tranche,_loan.startTime + _loan.duration,_loan.protocolFee,type()(uint256).max) (src/lib/loans/MultiSourceLoan.sol#273-281)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
	State variables written after the call(s):
	- _loans[newLoanId] = _loan.hash() (src/lib/loans/MultiSourceLoan.sol#305)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
	- delete _loans[loanId] (src/lib/loans/MultiSourceLoan.sol#306)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
Reentrancy in MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData) (src/lib/loans/MultiSourceLoan.sol#413-442):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(loan.borrower,loan.nftCollateralAddress,loan.nftCollateralTokenId,bytes32(),true) (src/lib/loans/MultiSourceLoan.sol#425-427)
	- ERC721(loan.nftCollateralAddress).transferFrom(address(this),loan.borrower,loan.nftCollateralTokenId) (src/lib/loans/MultiSourceLoan.sol#430)
	- handleAfterNFTTransferCallback(loan,msg.sender,_repaymentData.data.callbackData) (src/lib/loans/MultiSourceLoan.sol#433)
		- ! _isWhitelistedCallbackContract[_callbackAddress] || ILoanCallback(_callbackAddress).afterNFTTransfer(_loan,_callbackData) != ILoanCallback.afterNFTTransfer.selector (src/lib/callbacks/CallbackHandler.sol#79-81)
	- (totalRepayment,totalProtocolFee) = _processRepayments(loan) (src/lib/loans/MultiSourceLoan.sol#436)
		- ILoanManager(tranche.lender).loanRepayment(tranche.loanId,tranche.principalAmount,tranche.aprBps,tranche.accruedInterest,loan.protocolFee,tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#927-934)
	State variables written after the call(s):
	- delete _loans[loanId] (src/lib/loans/MultiSourceLoan.sol#441)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#46) can be used in cross function reentrancies:
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#514-516)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#464-473)
Reentrancy in AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#270-314):
	External calls:
	- ERC721(collateralAddress).transferFrom(address(this),_auction.highestBidder,tokenId) (src/lib/AuctionLoanLiquidator.sol#289)
	- asset.approve(address(_liquidationDistributor),proceeds) (src/lib/AuctionLoanLiquidator.sol#298)
	- _liquidationDistributor.distribute(_auction.loanAddress,proceeds,_loan) (src/lib/AuctionLoanLiquidator.sol#299)
	- IMultiSourceLoan(_auction.loanAddress).loanLiquidated(_auction.loanId,_loan) (src/lib/AuctionLoanLiquidator.sol#300)
	State variables written after the call(s):
	- delete _auctions[collateralAddress][tokenId] (src/lib/AuctionLoanLiquidator.sol#313)
	AuctionLoanLiquidator._auctions (src/lib/AuctionLoanLiquidator.sol#58) can be used in cross function reentrancies:
	- AuctionLoanLiquidator.getAuctionHash(address,uint256) (src/lib/AuctionLoanLiquidator.sol#317-319)
Reentrancy in AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#65-129):
	External calls:
	- LoanManager(thisTranche.lender).loanLiquidation(_auction.loanAddress,thisTranche.loanId,thisTranche.principalAmount,thisTranche.aprBps,thisTranche.accruedInterest,_loan.protocolFee,owed,thisTranche.startTime) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#104-113)
	- IMultiSourceLoan(_auction.loanAddress).loanLiquidated(_auction.loanId,_loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#120)
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),buyer,_tokenId) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#124)
	State variables written after the call(s):
	- delete _auctions[_nftAddress][_tokenId] (src/lib/AuctionWithBuyoutLoanLiquidator.sol#126)
	AuctionLoanLiquidator._auctions (src/lib/AuctionLoanLiquidator.sol#58) can be used in cross function reentrancies:
	- AuctionLoanLiquidator.getAuctionHash(address,uint256) (src/lib/AuctionLoanLiquidator.sol#317-319)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).largestTrancheIdx (src/lib/AuctionWithBuyoutLoanLiquidator.sol#78) is a local variable never initialized
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).totalOwed (src/lib/AuctionWithBuyoutLoanLiquidator.sol#94) is a local variable never initialized
MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes).totalAccruedInterest (src/lib/loans/MultiSourceLoan.sol#174) is a local variable never initialized
OraclePoolOfferHandler._getFactors(address,uint256,uint256,IBaseLoan.OfferValidator[]).key (src/lib/pools/OraclePoolOfferHandler.sol#350) is a local variable never initialized
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).largestPrincipal (src/lib/AuctionWithBuyoutLoanLiquidator.sol#79) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#270-314) ignores return value by asset.approve(address(_liquidationDistributor),proceeds) (src/lib/AuctionLoanLiquidator.sol#298)
PurchaseBundler.sell(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#130-143) ignores return value by _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#131)
MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData) (src/lib/loans/MultiSourceLoan.sol#413-442) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(loan.borrower,loan.nftCollateralAddress,loan.nftCollateralTokenId,bytes32(),true) (src/lib/loans/MultiSourceLoan.sol#425-427)
MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,loan.nftCollateralAddress,loan.nftCollateralTokenId,_rights,_value) (src/lib/loans/MultiSourceLoan.sol#483-485)
MultiSourceLoan.revokeDelegate(address,address,uint256) (src/lib/loans/MultiSourceLoan.sol#491-499) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,_collection,_tokenId,,false) (src/lib/loans/MultiSourceLoan.sol#496)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#41-62) ignores return value by ERC20(__usdc).approve(__aavePool,type()(uint256).max) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#60)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#41-62) ignores return value by ERC20(__aToken).approve(__aavePool,type()(uint256).max) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#61)
AaveUsdcBaseInterestAllocator._getBaseApr() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#135-138) ignores return value by (currentLiquidityRate) = IAaveLendingPool(_aavePool).getReserveData(_usdc) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#136)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96) (src/lib/pools/LidoEthBaseInterestAllocator.sol#47-65) ignores return value by ERC20(__lido).approve(__curvePool,type()(uint256).max) (src/lib/pools/LidoEthBaseInterestAllocator.sol#64)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#115-130) ignores return value by ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#124)
OraclePoolOfferHandler._getFactors(address,uint256,uint256,IBaseLoan.OfferValidator[]) (src/lib/pools/OraclePoolOfferHandler.sol#344-381) ignores return value by MerkleProofLib.verify(proof,root,leaf) (src/lib/pools/OraclePoolOfferHandler.sol#367)
LoanManager.addCallers(ILoanManager.ProposedCaller[]) (src/lib/loans/LoanManager.sol#56-73) ignores return value by _acceptedCallers.add(caller.caller) (src/lib/loans/LoanManager.sol#63)
Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8) (src/lib/pools/Pool.sol#131-167) ignores return value by _asset.approve(address(_feeManager),type()(uint256).max) (src/lib/pools/Pool.sol#166)
Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220) ignores return value by asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#207)
Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220) ignores return value by asset.approve(proposedAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#209)
Pool.afterCallerAdded(address) (src/lib/pools/Pool.sol#230-232) ignores return value by asset.approve(_caller,type()(uint256).max) (src/lib/pools/Pool.sol#231)
Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#785-791) ignores return value by WithdrawalQueue(_deployedQueues[_pendingQueueIndex].contractAddress).mint(receiver,shares) (src/lib/pools/Pool.sol#790)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
UserVault._vaultExists(uint256).owner (src/lib/UserVault.sol#389) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
BaseLoan.constructor(string,address,address,WithProtocolFee.ProtocolFee,address,address,uint256).owner (src/lib/loans/BaseLoan.sol#113) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool.withdraw(uint256,address,address).owner (src/lib/pools/Pool.sol#438) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool.redeem(uint256,address,address).owner (src/lib/pools/Pool.sol#451) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool._withdraw(address,address,uint256,uint256).owner (src/lib/pools/Pool.sol#785) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#386-403) should emit an event for: 
	- getCollectedFees = getCollectedFees + fees (src/lib/pools/Pool.sol#401) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Owned.transferOwnership(address).newOwner (lib/solmate/src/auth/Owned.sol#39) lacks a zero-check on :
		- owner = newOwner (lib/solmate/src/auth/Owned.sol#40)
TwoStepOwned.requestTransferOwner(address)._newOwner (src/lib/utils/TwoStepOwned.sol#27) lacks a zero-check on :
		- pendingOwner = _newOwner (src/lib/utils/TwoStepOwned.sol#28)
PurchaseBundler.updateMultiSourceLoanAddressFirst(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#231) lacks a zero-check on :
		- _pendingMultiSourceLoanAddress = _newAddress (src/lib/callbacks/PurchaseBundler.sol#234)
LoanManagerParameterSetter.constructor(address,uint256).__offerHandler (src/lib/loans/LoanManagerParameterSetter.sol#36) lacks a zero-check on :
		- getOfferHandler = __offerHandler (src/lib/loans/LoanManagerParameterSetter.sol#40)
LiquidationHandler.updateLiquidationContract(address).__loanLiquidator (src/lib/LiquidationHandler.sol#74) lacks a zero-check on :
		- _loanLiquidator = __loanLiquidator (src/lib/LiquidationHandler.sol#76)
MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).delegateRegistry (src/lib/loans/MultiSourceLoan.sol#97) lacks a zero-check on :
		- getDelegateRegistry = delegateRegistry (src/lib/loans/MultiSourceLoan.sol#116)
MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).flashActionContract (src/lib/loans/MultiSourceLoan.sol#99) lacks a zero-check on :
		- getFlashActionContract = flashActionContract (src/lib/loans/MultiSourceLoan.sol#117)
MultiSourceLoan.setFlashActionContract(address)._newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#543) lacks a zero-check on :
		- getFlashActionContract = _newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#544)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address).__aavePool (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#43) lacks a zero-check on :
		- _aavePool = __aavePool (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#53)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address).__aToken (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#45) lacks a zero-check on :
		- _aToken = __aToken (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#55)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address)._rewardsController (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#46) lacks a zero-check on :
		- getRewardsController = _rewardsController (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#57)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address,address,address)._rewardsReceiver (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#47) lacks a zero-check on :
		- getRewardsReceiver = _rewardsReceiver (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#58)
AaveUsdcBaseInterestAllocator.setRewardsController(address)._controller (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#64) lacks a zero-check on :
		- getRewardsController = _controller (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#65)
AaveUsdcBaseInterestAllocator.setRewardsReceiver(address)._receiver (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#70) lacks a zero-check on :
		- getRewardsReceiver = _receiver (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#71)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96).__curvePool (src/lib/pools/LidoEthBaseInterestAllocator.sol#49) lacks a zero-check on :
		- _curvePool = __curvePool (src/lib/pools/LidoEthBaseInterestAllocator.sol#59)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96).__lido (src/lib/pools/LidoEthBaseInterestAllocator.sol#51) lacks a zero-check on :
		- _lido = __lido (src/lib/pools/LidoEthBaseInterestAllocator.sol#61)
OraclePoolOfferHandler.constructor(uint32,OraclePoolOfferHandler.AprFactors,uint256,address,bytes4,bytes4,uint256)._oracle (src/lib/pools/OraclePoolOfferHandler.sol#126) lacks a zero-check on :
		- getOracle = _oracle (src/lib/pools/OraclePoolOfferHandler.sol#131)
OraclePoolOfferHandler.setPool(address)._pool (src/lib/pools/OraclePoolOfferHandler.sol#141) lacks a zero-check on :
		- getPool = _pool (src/lib/pools/OraclePoolOfferHandler.sol#145)
OraclePoolOfferHandler.setOracle(address)._oracle (src/lib/pools/OraclePoolOfferHandler.sol#152) lacks a zero-check on :
		- getProposedOracle = _oracle (src/lib/pools/OraclePoolOfferHandler.sol#153)
LoanManager.updateOfferHandler(address)._offerHandler (src/lib/loans/LoanManager.sol#46) lacks a zero-check on :
		- getOfferHandler = _offerHandler (src/lib/loans/LoanManager.sol#50)
Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,ERC20,string,string,uint8)._feeManager (src/lib/pools/Pool.sol#132) lacks a zero-check on :
		- getFeeManager = _feeManager (src/lib/pools/Pool.sol#145)
Pool.setBaseInterestAllocator(address)._newBaseInterestAllocator (src/lib/pools/Pool.sol#185) lacks a zero-check on :
		- getProposedBaseInterestAllocator = _newBaseInterestAllocator (src/lib/pools/Pool.sol#188)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#65-129) has external calls inside a loop: getLoanManagerRegistry.isLoanManager(thisTranche.lender) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#103)
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#65-129) has external calls inside a loop: LoanManager(thisTranche.lender).loanLiquidation(_auction.loanAddress,thisTranche.loanId,thisTranche.principalAmount,thisTranche.aprBps,thisTranche.accruedInterest,_loan.protocolFee,owed,thisTranche.startTime) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#104-113)
LiquidationDistributor._handleLoanManagerCall(address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/LiquidationDistributor.sol#140-155) has external calls inside a loop: getLoanManagerRegistry.isLoanManager(_tranche.lender) (src/lib/LiquidationDistributor.sol#143)
LiquidationDistributor._handleLoanManagerCall(address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/LiquidationDistributor.sol#140-155) has external calls inside a loop: LoanManager(_tranche.lender).loanLiquidation(_loanAddress,_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFee,_sent,_tranche.startTime) (src/lib/LiquidationDistributor.sol#144-153)
UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#323-334) has external calls inside a loop: ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#336-347) has external calls inside a loop: IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#291-297) has external calls inside a loop: ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#292)
UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#299-308) has external calls inside a loop: _depositor != IOldERC721(_collection).ownerOf(_tokenId) (src/lib/UserVault.sol#300)
UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#299-308) has external calls inside a loop: IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#303)
MultiSourceLoan._processOldTranche(address,address,address,IMultiSourceLoan.Tranche,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#620-669) has external calls inside a loop: getLoanManagerRegistry.isLoanManager(_tranche.lender) (src/lib/loans/MultiSourceLoan.sol#640)
MultiSourceLoan._processOldTranche(address,address,address,IMultiSourceLoan.Tranche,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#620-669) has external calls inside a loop: ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
Pool.afterCallerAdded(address) (src/lib/pools/Pool.sol#230-232) has external calls inside a loop: asset.approve(_caller,type()(uint256).max) (src/lib/pools/Pool.sol#231)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#291-297):
	External calls:
	- ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#292)
	State variables written after the call(s):
	- _vaultERC721s[_collection][_tokenId] = _vaultId (src/lib/UserVault.sol#294)
Reentrancy in UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#299-308):
	External calls:
	- IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#303)
	State variables written after the call(s):
	- _vaultOldERC721s[_collection][_tokenId] = _vaultId (src/lib/UserVault.sol#305)
Reentrancy in Pool._queueClaimAll(uint256,uint256) (src/lib/pools/Pool.sol#715-745):
	External calls:
	- _reallocateOnWithdrawal(_totalToBeWithdrawn) (src/lib/pools/Pool.sol#716)
		- IBaseInterestAllocator(baseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#633)
	State variables written after the call(s):
	- getAvailableToWithdraw = 0 (src/lib/pools/Pool.sol#727)
	- _updatePendingWithdrawalWithQueue(idx,_cachedPendingQueueIndex,pendingWithdrawal) (src/lib/pools/Pool.sol#722)
		- getTotalReceived[_idx] = 0 (src/lib/pools/Pool.sol#679)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[]) (src/lib/UserVault.sol#100-137):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#114)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
	- _withdrawOldERC721(_vaultId,_oldCollections[i_scope_0],_oldTokenIds[i_scope_0]) (src/lib/UserVault.sol#124)
		- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
	State variables written after the call(s):
	- _withdrawERC20(_vaultId,_tokens[i_scope_1]) (src/lib/UserVault.sol#131)
		- delete _vaultERC20s[_token][_vaultId] (src/lib/UserVault.sol#356)
Reentrancy in Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#270-345):
	External calls:
	- _queueClaimAll(proRataLiquid + getAvailableToWithdraw,pendingQueueIndex) (src/lib/pools/Pool.sol#300)
		- IBaseInterestAllocator(baseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#633)
	State variables written after the call(s):
	- delete _outstandingValues (src/lib/pools/Pool.sol#333)
	- _queueOutstandingValues[pendingQueueIndex] = _outstandingValues (src/lib/pools/Pool.sol#329)
	- delete _queueOutstandingValues[lastQueueIndex] (src/lib/pools/Pool.sol#331)
	- _updateLoanLastIds() (src/lib/pools/Pool.sol#335)
		- getLastLoanId[_pendingQueueIndex][caller] = IBaseLoan(caller).getTotalLoansIssued() (src/lib/pools/Pool.sol#655)
Reentrancy in MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#122-157):
	External calls:
	- (loanId,offerIds,loan,totalFee) = _processOffersFromExecutionData(borrower,executionData.principalReceiver,principalAddress,nftCollateralAddress,executionData.tokenId,executionData.duration,offerExecution) (src/lib/loans/MultiSourceLoan.sol#136-145)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#778)
	- handleAfterPrincipalTransferCallback(loan,msg.sender,executionData.callbackData,totalFee) (src/lib/loans/MultiSourceLoan.sol#148)
		- ! _isWhitelistedCallbackContract[_callbackAddress] || ILoanCallback(_callbackAddress).afterPrincipalTransfer(_loan,_fee,_callbackData) != ILoanCallback.afterPrincipalTransfer.selector (src/lib/callbacks/CallbackHandler.sol#61-63)
	- ERC721(nftCollateralAddress).transferFrom(borrower,address(this),executionData.tokenId) (src/lib/loans/MultiSourceLoan.sol#151)
	State variables written after the call(s):
	- _loans[loanId] = loan.hash() (src/lib/loans/MultiSourceLoan.sol#153)
Reentrancy in Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#406-430):
	External calls:
	- fees = IFeeManager(getFeeManager).processFees(_principalAmount,_received - _principalAmount) (src/lib/pools/Pool.sol#423)
	- fees = IFeeManager(getFeeManager).processFees(_received,0) (src/lib/pools/Pool.sol#425)
	State variables written after the call(s):
	- _loanTermination(_loanAddress,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#429)
		- _outstandingValues = _updateOutstandingValuesOnTermination(_outstandingValues,_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#571-572)
	- _loanTermination(_loanAddress,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#429)
		- _queueOutstandingValues[idx] = _updateOutstandingValuesOnTermination(_queueOutstandingValues[idx],_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#579-581)
	- _loanTermination(_loanAddress,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#429)
		- getAvailableToWithdraw = getAvailableToWithdraw + pendingToQueue (src/lib/pools/Pool.sol#578)
	- getCollectedFees += fees (src/lib/pools/Pool.sol#427)
	- _loanTermination(_loanAddress,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#429)
		- getTotalReceived[idx] += _received (src/lib/pools/Pool.sol#577)
Reentrancy in Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#386-403):
	External calls:
	- fees = IFeeManager(getFeeManager).processFees(_principalAmount,interestEarned) (src/lib/pools/Pool.sol#400)
	State variables written after the call(s):
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#402)
		- _outstandingValues = _updateOutstandingValuesOnTermination(_outstandingValues,_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#571-572)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#402)
		- _queueOutstandingValues[idx] = _updateOutstandingValuesOnTermination(_queueOutstandingValues[idx],_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#579-581)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#402)
		- getAvailableToWithdraw = getAvailableToWithdraw + pendingToQueue (src/lib/pools/Pool.sol#578)
	- getCollectedFees = getCollectedFees + fees (src/lib/pools/Pool.sol#401)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#402)
		- getTotalReceived[idx] += _received (src/lib/pools/Pool.sol#577)
Reentrancy in MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#160-235):
	External calls:
	- (totalAccruedInterest,totalAnnualInterest,None) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated,0) (src/lib/loans/MultiSourceLoan.sol#179-180)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
	- (totalAccruedInterest,totalAnnualInterest,netNewLender) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated,netNewLender) (src/lib/loans/MultiSourceLoan.sol#203-204)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#641-648)
	State variables written after the call(s):
	- newLoanId = _getAndSetNewLoanId() (src/lib/loans/MultiSourceLoan.sol#212)
		- ++ getTotalLoansIssued (src/lib/loans/BaseLoan.sol#197)
Reentrancy in Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#348-373):
	External calls:
	- (principalAmount,apr) = IPoolOfferHandler(getOfferHandler).validateOffer(IBaseInterestAllocator(getBaseInterestAllocator).getBaseAprWithUpdate(),_offer) (src/lib/pools/Pool.sol#358-360)
	- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,principalAmount,true) (src/lib/pools/Pool.sol#369)
	State variables written after the call(s):
	- _outstandingValues = _getNewLoanAccounting(principalAmount,_netApr(apr,_protocolFee)) (src/lib/pools/Pool.sol#372)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#291-297):
	External calls:
	- ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#292)
	Event emitted after the call(s):
	- ERC721Deposited(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#296)
Reentrancy in UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#299-308):
	External calls:
	- IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#303)
	Event emitted after the call(s):
	- OldERC721Deposited(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#307)
Reentrancy in LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#96-126):
	External calls:
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loan.tranche[0].lender,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#105-107)
	Event emitted after the call(s):
	- LoanForeclosed(_loanId) (src/lib/LiquidationHandler.sol#108)
Reentrancy in LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#96-126):
	External calls:
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),liquidator,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#113)
	- liquidation = ILoanLiquidator(liquidator).liquidateLoan(_loanId,_loan.nftCollateralAddress,_loan.nftCollateralTokenId,_loan.principalAddress,_liquidationAuctionDuration,_loan.principalAmount.mulDivDown(MIN_BID_LIQUIDATION,_BPS),msg.sender) (src/lib/LiquidationHandler.sol#114-122)
	Event emitted after the call(s):
	- LoanSentToLiquidator(_loanId,liquidator) (src/lib/LiquidationHandler.sol#124)
Reentrancy in UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#323-334):
	External calls:
	- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
	Event emitted after the call(s):
	- ERC721Withdrawn(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#333)
Reentrancy in UserVault._withdrawEth(uint256) (src/lib/UserVault.sol#370-385):
	External calls:
	- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#379)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,ETH,amount) (src/lib/UserVault.sol#384)
Reentrancy in UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#336-347):
	External calls:
	- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
	Event emitted after the call(s):
	- OldERC721Withdrawn(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#346)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[]) (src/lib/UserVault.sol#100-137):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#114)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
	- _withdrawOldERC721(_vaultId,_oldCollections[i_scope_0],_oldTokenIds[i_scope_0]) (src/lib/UserVault.sol#124)
		- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,_token,amount) (src/lib/UserVault.sol#360)
		- _withdrawERC20(_vaultId,_tokens[i_scope_1]) (src/lib/UserVault.sol#131)
	- OldERC721Withdrawn(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#346)
		- _withdrawOldERC721(_vaultId,_oldCollections[i_scope_0],_oldTokenIds[i_scope_0]) (src/lib/UserVault.sol#124)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[]) (src/lib/UserVault.sol#100-137):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#114)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#329)
	- _withdrawOldERC721(_vaultId,_oldCollections[i_scope_0],_oldTokenIds[i_scope_0]) (src/lib/UserVault.sol#124)
		- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#342)
	- _withdrawEth(_vaultId) (src/lib/UserVault.sol#136)
		- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#379)
	External calls sending eth:
	- _withdrawEth(_vaultId) (src/lib/UserVault.sol#136)
		- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#379)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,ETH,amount) (src/lib/UserVault.sol#384)
		- _withdrawEth(_vaultId) (src/lib/UserVault.sol#136)
Reentrancy in PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#97-126):
	External calls:
	- encodedOutput = _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#102)
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#119)
	External calls sending eth:
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#119)
	Event emitted after the call(s):
	- BNPLLoansStarted(loanIds) (src/lib/callbacks/PurchaseBundler.sol#124)
Reentrancy in Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220):
	External calls:
	- IBaseInterestAllocator(cachedAllocator).transferAll() (src/lib/pools/Pool.sol#206)
	- asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#207)
	- asset.approve(proposedAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#209)
	- _reallocate() (src/lib/pools/Pool.sol#216)
		- IBaseInterestAllocator(baseInterestAllocator).reallocate(currentBalance,targetIdle,false) (src/lib/pools/Pool.sol#617)
	Event emitted after the call(s):
	- BaseInterestAllocatorSet(proposedAllocator) (src/lib/pools/Pool.sol#219)
Reentrancy in LoanManagerParameterSetter.confirmOfferHandler(address) (src/lib/loans/LoanManagerParameterSetter.sol#75-90):
	External calls:
	- ILoanManager(getLoanManager).updateOfferHandler(__offerHandler) (src/lib/loans/LoanManagerParameterSetter.sol#87)
	Event emitted after the call(s):
	- OfferHandlerSet(__offerHandler) (src/lib/loans/LoanManagerParameterSetter.sol#89)
Reentrancy in MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,loan.nftCollateralAddress,loan.nftCollateralTokenId,_rights,_value) (src/lib/loans/MultiSourceLoan.sol#483-485)
	Event emitted after the call(s):
	- Delegated(_loanId,_delegate,_value) (src/lib/loans/MultiSourceLoan.sol#487)
Reentrancy in AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92-105):
	External calls:
	- ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#96)
	- IAaveLendingPool(_aavePool).deposit(_usdc,delta,address(this),0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#97)
	- IAaveLendingPool(_aavePool).withdraw(_usdc,delta_scope_0,address(this)) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#100)
	- ERC20(_usdc).transfer(pool,delta_scope_0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#101)
	Event emitted after the call(s):
	- Reallocated(_currentIdle,_targetIdle) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#104)
Reentrancy in LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#115-130):
	External calls:
	- weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#120)
	- weth.withdraw(amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#121)
	- ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#124)
	- _exchangeAndSendWeth(pool,_targetIdle - _currentIdle,_force) (src/lib/pools/LidoEthBaseInterestAllocator.sol#126)
		- received = ICurve(_curvePool).exchange(1,0,_amount,_amount.mulDivUp(_BPS - slippage,_BPS)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
		- weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#158)
	External calls sending eth:
	- ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#124)
	- _exchangeAndSendWeth(pool,_targetIdle - _currentIdle,_force) (src/lib/pools/LidoEthBaseInterestAllocator.sol#126)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
	Event emitted after the call(s):
	- Reallocated(_currentIdle,_targetIdle) (src/lib/pools/LidoEthBaseInterestAllocator.sol#129)
Reentrancy in MultiSourceLoan.revokeDelegate(address,address,uint256) (src/lib/loans/MultiSourceLoan.sol#491-499):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,_collection,_tokenId,,false) (src/lib/loans/MultiSourceLoan.sol#496)
	Event emitted after the call(s):
	- RevokeDelegate(_delegate,_collection,_tokenId) (src/lib/loans/MultiSourceLoan.sol#498)
Reentrancy in PurchaseBundler.sell(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#130-143):
	External calls:
	- _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#131)
	Event emitted after the call(s):
	- SellAndRepayExecuted(loanIds) (src/lib/callbacks/PurchaseBundler.sol#142)
Reentrancy in AaveUsdcBaseInterestAllocator.transferAll() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#108-118):
	External calls:
	- IAaveLendingPool(_aavePool).withdraw(usdc,total,address(this)) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#113)
	- ERC20(usdc).transfer(pool,total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#115)
	Event emitted after the call(s):
	- AllTransfered(total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#117)
Reentrancy in LidoEthBaseInterestAllocator.transferAll() (src/lib/pools/LidoEthBaseInterestAllocator.sol#133-138):
	External calls:
	- _exchangeAndSendWeth(_onlyPool(),total,true) (src/lib/pools/LidoEthBaseInterestAllocator.sol#135)
		- received = ICurve(_curvePool).exchange(1,0,_amount,_amount.mulDivUp(_BPS - slippage,_BPS)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
		- weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#158)
	External calls sending eth:
	- _exchangeAndSendWeth(_onlyPool(),total,true) (src/lib/pools/LidoEthBaseInterestAllocator.sol#135)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
	Event emitted after the call(s):
	- AllTransfered(total) (src/lib/pools/LidoEthBaseInterestAllocator.sol#137)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (lib/solmate/src/tokens/ERC20.sol#116-160) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,PERMIT_DEADLINE_EXPIRED) (lib/solmate/src/tokens/ERC20.sol#125)
AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256) (src/lib/AuctionLoanLiquidator.sol#231-267) uses timestamp for comparisons
	Dangerous comparisons:
	- max <= currentTime && currentHighestBid != 0 (src/lib/AuctionLoanLiquidator.sol#247)
AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#270-314) uses timestamp for comparisons
	Dangerous comparisons:
	- (withMargin > currentTime && currentTime < maxExtension) || (currentTime < expiration) (src/lib/AuctionLoanLiquidator.sol#283)
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#65-129) uses timestamp for comparisons
	Dangerous comparisons:
	- timeLimit <= block.timestamp (src/lib/AuctionWithBuyoutLoanLiquidator.sol#75)
AuctionWithBuyoutLoanLiquidator._placeBidChecks(address,uint256,IAuctionLoanLiquidator.Auction,uint256) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#147-157) uses timestamp for comparisons
	Dangerous comparisons:
	- timeLimit > block.timestamp (src/lib/AuctionWithBuyoutLoanLiquidator.sol#154)
LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#96-126) uses timestamp for comparisons
	Dangerous comparisons:
	- expirationTime > block.timestamp (src/lib/LiquidationHandler.sol#101)
PurchaseBundler.setTaxes() (src/lib/callbacks/PurchaseBundler.sol#284-292) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _pendingTaxesSetTime + TAX_UPDATE_NOTICE (src/lib/callbacks/PurchaseBundler.sol#285)
LoanManagerParameterSetter.confirmOfferHandler(address) (src/lib/loans/LoanManagerParameterSetter.sol#75-90) uses timestamp for comparisons
	Dangerous comparisons:
	- getProposedOfferHandlerSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/loans/LoanManagerParameterSetter.sol#76)
LoanManagerParameterSetter.addCallers(ILoanManager.ProposedCaller[]) (src/lib/loans/LoanManagerParameterSetter.sol#104-123) uses timestamp for comparisons
	Dangerous comparisons:
	- getProposedAcceptedCallersSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/loans/LoanManagerParameterSetter.sol#105)
MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#476-488) uses timestamp for comparisons
	Dangerous comparisons:
	- loan.hash() != _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#477)
MultiSourceLoan._processOldTranche(address,address,address,IMultiSourceLoan.Tranche,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#620-669) uses timestamp for comparisons
	Dangerous comparisons:
	- unlockTime > block.timestamp (src/lib/loans/MultiSourceLoan.sol#630)
	- oldLenderDebt > _remainingNewLender (src/lib/loans/MultiSourceLoan.sol#656)
	- oldLenderDebt > 0 (src/lib/loans/MultiSourceLoan.sol#660)
MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#674-681) uses timestamp for comparisons
	Dangerous comparisons:
	- _loan.hash() != _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#675)
	- _loan.startTime + _loan.duration <= block.timestamp (src/lib/loans/MultiSourceLoan.sol#678)
MultiSourceLoan._baseRenegotiationChecks(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#684-702) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _renegotiationOffer.expirationTime (src/lib/loans/MultiSourceLoan.sol#694)
MultiSourceLoan._isLoanLocked(uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#747-753) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _loanEndTime - delta.mulDivUp(_minLockPeriod,_PRECISION) (src/lib/loans/MultiSourceLoan.sol#752)
MultiSourceLoan._validateOfferExecution(IMultiSourceLoan.OfferExecution,uint256,address,uint256,bytes,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#764-806) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > offer.expirationTime (src/lib/loans/MultiSourceLoan.sol#783)
MultiSourceLoan._validateExecutionData(IMultiSourceLoan.LoanExecutionData,address) (src/lib/loans/MultiSourceLoan.sol#809-819) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _executionData.executionData.expirationTime (src/lib/loans/MultiSourceLoan.sol#813)
MultiSourceLoan._checkStrictlyBetter(uint256,uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#1095-1122) uses timestamp for comparisons
	Dangerous comparisons:
	- ((_offerPrincipalAmount - _loanPrincipalAmount != 0) && ((_loanAprBps * _loanPrincipalAmount - _offerAprBps * _offerPrincipalAmount).mulDivDown(_PRECISION,_loanAprBps * _loanPrincipalAmount) < minImprovementApr)) || (_offerFee != 0) || (_offerEndTime < _loanEndTime) (src/lib/loans/MultiSourceLoan.sol#1111-1118)
FeeManager.confirmFees(IFeeManager.Fees) (src/lib/pools/FeeManager.sol#47-60) uses timestamp for comparisons
	Dangerous comparisons:
	- _proposedFeesSetTime + WAIT_TIME > block.timestamp (src/lib/pools/FeeManager.sol#48)
LidoEthBaseInterestAllocator.getBaseApr() (src/lib/pools/LidoEthBaseInterestAllocator.sol#76-90) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - lidoData.lastTs > getLidoUpdateTolerance (src/lib/pools/LidoEthBaseInterestAllocator.sol#79)
	- aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#86)
LidoEthBaseInterestAllocator.getBaseAprWithUpdate() (src/lib/pools/LidoEthBaseInterestAllocator.sol#93-102) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - lidoData.lastTs > getLidoUpdateTolerance (src/lib/pools/LidoEthBaseInterestAllocator.sol#95)
	- lidoData.aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#98)
OraclePoolOfferHandler.confirmOracle() (src/lib/pools/OraclePoolOfferHandler.sol#160-170) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - MIN_WAIT_TIME < getProposedOracleSetTs (src/lib/pools/OraclePoolOfferHandler.sol#161)
OraclePoolOfferHandler.confirmAprFactors() (src/lib/pools/OraclePoolOfferHandler.sol#179-189) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - MIN_WAIT_TIME < getProposedAprFactorsSetTs (src/lib/pools/OraclePoolOfferHandler.sol#180)
OraclePoolOfferHandler.confirmCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[]) (src/lib/pools/OraclePoolOfferHandler.sol#254-288) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - MIN_WAIT_TIME_UPDATE_FACTOR < getProposedCollectionFactorsSetTs (src/lib/pools/OraclePoolOfferHandler.sol#260)
OraclePoolOfferHandler.validateOffer(uint256,bytes) (src/lib/pools/OraclePoolOfferHandler.sol#291-342) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - currentFloor.updated > duration.mulDivDown(TOLERANCE_FLOOR,PRECISION) || block.timestamp - historicalFloor.updated > duration.mulDivDown(TOLERANCE_HISTORICAL_FLOOR,PRECISION) (src/lib/pools/OraclePoolOfferHandler.sol#309-310)
	- _baseRate + aprPremiumValue > offerExecution.offer.aprBps (src/lib/pools/OraclePoolOfferHandler.sol#333)
	- (block.timestamp - aprPremium.updatedTs > getAprUpdateTolerance) (src/lib/pools/OraclePoolOfferHandler.sol#298-299)
Pool.confirmBaseInterestAllocator() (src/lib/pools/Pool.sol#195-220) uses timestamp for comparisons
	Dangerous comparisons:
	- getProposedBaseInterestAllocatorSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/pools/Pool.sol#203)
	- allocatorChanged && asset.balanceOf(address(this)) - getAvailableToWithdraw - getCollectedFees > 0 (src/lib/pools/Pool.sol#215)
Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#270-345) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - queue.deployedTime < getMinTimeBetweenWithdrawalQueues (src/lib/pools/Pool.sol#276)
	- i < totalQueues - 1 (src/lib/pools/Pool.sol#314)
	- _deployedQueues[idx].contractAddress == address(0) (src/lib/pools/Pool.sol#316)
Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#348-373) uses timestamp for comparisons
	Dangerous comparisons:
	- principalAmount > undeployedAssets (src/lib/pools/Pool.sol#366)
	- principalAmount > currentBalance (src/lib/pools/Pool.sol#368)
Pool.reallocate() (src/lib/pools/Pool.sol#376-383) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance > targetIdle (src/lib/pools/Pool.sol#378)
Pool.redeem(uint256,address,address) (src/lib/pools/Pool.sol#451-464) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((assets = previewRedeem(shares)) != 0,ZERO_ASSETS) (src/lib/pools/Pool.sol#461)
Pool._reallocate() (src/lib/pools/Pool.sol#601-619) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance == 0 (src/lib/pools/Pool.sol#604)
	- fraction >= optimalIdleRange.min && fraction < optimalIdleRange.max (src/lib/pools/Pool.sol#613)
Pool._reallocateOnWithdrawal(uint256) (src/lib/pools/Pool.sol#623-634) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance > _withdrawn (src/lib/pools/Pool.sol#626)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#668-712) uses timestamp for comparisons
	Dangerous comparisons:
	- totalReceived == 0 (src/lib/pools/Pool.sol#676)
	- queueAccounting.thisQueueFraction == 0 (src/lib/pools/Pool.sol#693)
Pool._outstandingApr(Pool.OutstandingValues) (src/lib/pools/Pool.sol#748-753) uses timestamp for comparisons
	Dangerous comparisons:
	- __outstandingValues.principalAmount == 0 (src/lib/pools/Pool.sol#749)
Pool._updateOutstandingValuesOnTermination(Pool.OutstandingValues,uint256,uint256,uint256) (src/lib/pools/Pool.sol#761-783) uses timestamp for comparisons
	Dangerous comparisons:
	- total < _interestEarned (src/lib/pools/Pool.sol#774)
PoolOfferHandler.confirmTerms() (src/lib/pools/PoolOfferHandler.sol#100-119) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - pendingTermsSetTime < NEW_TERMS_WAITING_TIME (src/lib/pools/PoolOfferHandler.sol#101)
WithdrawalQueue.withdraw(address,uint256) (src/lib/pools/WithdrawalQueue.sol#82-105) uses timestamp for comparisons
	Dangerous comparisons:
	- unlockTime > block.timestamp (src/lib/pools/WithdrawalQueue.sol#84)
WithdrawalQueue.lockWithdrawals(uint256,uint256) (src/lib/pools/WithdrawalQueue.sol#117-131) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp + _time < getUnlockTime[_tokenId] (src/lib/pools/WithdrawalQueue.sol#123)
TwoStepOwned.transferOwnership() (src/lib/utils/TwoStepOwned.sol#35-48) uses timestamp for comparisons
	Dangerous comparisons:
	- pendingOwnerTime + MIN_WAIT_TIME > block.timestamp (src/lib/utils/TwoStepOwned.sol#37)
WithProtocolFee.setProtocolFee() (src/lib/utils/WithProtocolFee.sol#69-77) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _pendingProtocolFeeSetTime + FEE_UPDATE_NOTICE (src/lib/utils/WithProtocolFee.sol#70)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Panic.panic(uint256) (lib/openzeppelin-contracts/contracts/utils/Panic.sol#47-54) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Panic.sol#49-53)
Strings.toString(uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#24-44) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#30-32)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#36-38)
ECDSA.tryRecover(bytes32,bytes) (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#56-73) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#64-68)
MessageHashUtils.toEthSignedMessageHash(bytes32) (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#30-37) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#32-36)
MessageHashUtils.toTypedDataHash(bytes32,bytes32) (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#76-85) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#78-84)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#144-223) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#151-154)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#175-182)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#188-197)
Math.tryModExp(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#322-347) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#325-346)
Math.tryModExp(bytes,bytes,bytes) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#363-386) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#376-385)
SafeCast.toUint(bool) (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1157-1162) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1159-1161)
EnumerableSet.values(EnumerableSet.Bytes32Set) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#219-229) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#224-226)
EnumerableSet.values(EnumerableSet.AddressSet) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#293-303) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#298-300)
EnumerableSet.values(EnumerableSet.UintSet) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#367-377) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#372-374)
CalldataPointerLib.lt(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#51-58) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#55-57)
CalldataPointerLib.gt(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#60-67) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#64-66)
CalldataPointerLib.eq(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#69-76) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#73-75)
CalldataPointerLib.isNull(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#78-82) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#79-81)
CalldataPointerLib.next(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#106-112) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#109-111)
CalldataPointerLib.offset(CalldataPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#115-122) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#119-121)
CalldataPointerLib.copy(CalldataPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#126-134) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#131-133)
ReturndataPointerLib.lt(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#138-145) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#142-144)
ReturndataPointerLib.gt(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#147-154) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#151-153)
ReturndataPointerLib.eq(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#156-163) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#160-162)
ReturndataPointerLib.isNull(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#165-169) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#166-168)
ReturndataPointerLib.next(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#193-199) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#196-198)
ReturndataPointerLib.offset(ReturndataPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#202-209) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#206-208)
ReturndataPointerLib.copy(ReturndataPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#213-221) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#218-220)
MemoryPointerLib.copy(MemoryPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#225-243) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#230-242)
MemoryPointerLib.lt(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#245-252) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#249-251)
MemoryPointerLib.gt(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#254-261) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#258-260)
MemoryPointerLib.eq(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#263-270) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#267-269)
MemoryPointerLib.isNull(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#272-276) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#273-275)
MemoryPointerLib.hash(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#278-285) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#282-284)
MemoryPointerLib.next(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#288-294) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#291-293)
MemoryPointerLib.offset(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#297-304) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#301-303)
CalldataReaders.readBool(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#336-342) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#339-341)
CalldataReaders.readAddress(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#345-351) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#348-350)
CalldataReaders.readBytes1(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#354-360) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#357-359)
CalldataReaders.readBytes2(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#363-369) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#366-368)
CalldataReaders.readBytes3(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#372-378) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#375-377)
CalldataReaders.readBytes4(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#381-387) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#384-386)
CalldataReaders.readBytes5(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#390-396) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#393-395)
CalldataReaders.readBytes6(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#399-405) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#402-404)
CalldataReaders.readBytes7(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#408-414) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#411-413)
CalldataReaders.readBytes8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#417-423) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#420-422)
CalldataReaders.readBytes9(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#426-432) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#429-431)
CalldataReaders.readBytes10(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#435-441) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#438-440)
CalldataReaders.readBytes11(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#444-450) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#447-449)
CalldataReaders.readBytes12(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#453-459) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#456-458)
CalldataReaders.readBytes13(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#462-468) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#465-467)
CalldataReaders.readBytes14(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#471-477) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#474-476)
CalldataReaders.readBytes15(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#480-486) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#483-485)
CalldataReaders.readBytes16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#489-495) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#492-494)
CalldataReaders.readBytes17(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#498-504) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#501-503)
CalldataReaders.readBytes18(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#507-513) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#510-512)
CalldataReaders.readBytes19(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#516-522) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#519-521)
CalldataReaders.readBytes20(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#525-531) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#528-530)
CalldataReaders.readBytes21(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#534-540) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#537-539)
CalldataReaders.readBytes22(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#543-549) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#546-548)
CalldataReaders.readBytes23(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#552-558) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#555-557)
CalldataReaders.readBytes24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#561-567) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#564-566)
CalldataReaders.readBytes25(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#570-576) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#573-575)
CalldataReaders.readBytes26(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#579-585) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#582-584)
CalldataReaders.readBytes27(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#588-594) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#591-593)
CalldataReaders.readBytes28(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#597-603) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#600-602)
CalldataReaders.readBytes29(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#606-612) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#609-611)
CalldataReaders.readBytes30(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#615-621) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#618-620)
CalldataReaders.readBytes31(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#624-630) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#627-629)
CalldataReaders.readBytes32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#633-639) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#636-638)
CalldataReaders.readUint8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#642-648) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#645-647)
CalldataReaders.readUint16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#651-657) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#654-656)
CalldataReaders.readUint24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#660-666) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#663-665)
CalldataReaders.readUint32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#669-675) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#672-674)
CalldataReaders.readUint40(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#678-684) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#681-683)
CalldataReaders.readUint48(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#687-693) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#690-692)
CalldataReaders.readUint56(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#696-702) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#699-701)
CalldataReaders.readUint64(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#705-711) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#708-710)
CalldataReaders.readUint72(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#714-720) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#717-719)
CalldataReaders.readUint80(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#723-729) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#726-728)
CalldataReaders.readUint88(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#732-738) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#735-737)
CalldataReaders.readUint96(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#741-747) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#744-746)
CalldataReaders.readUint104(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#750-756) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#753-755)
CalldataReaders.readUint112(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#759-765) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#762-764)
CalldataReaders.readUint120(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#768-774) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#771-773)
CalldataReaders.readUint128(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#777-783) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#780-782)
CalldataReaders.readUint136(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#786-792) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#789-791)
CalldataReaders.readUint144(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#795-801) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#798-800)
CalldataReaders.readUint152(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#804-810) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#807-809)
CalldataReaders.readUint160(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#813-819) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#816-818)
CalldataReaders.readUint168(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#822-828) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#825-827)
CalldataReaders.readUint176(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#831-837) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#834-836)
CalldataReaders.readUint184(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#840-846) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#843-845)
CalldataReaders.readUint192(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#849-855) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#852-854)
CalldataReaders.readUint200(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#858-864) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#861-863)
CalldataReaders.readUint208(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#867-873) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#870-872)
CalldataReaders.readUint216(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#876-882) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#879-881)
CalldataReaders.readUint224(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#885-891) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#888-890)
CalldataReaders.readUint232(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#894-900) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#897-899)
CalldataReaders.readUint240(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#903-909) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#906-908)
CalldataReaders.readUint248(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#912-918) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#915-917)
CalldataReaders.readUint256(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#921-927) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#924-926)
CalldataReaders.readInt8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#930-936) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#933-935)
CalldataReaders.readInt16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#939-945) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#942-944)
CalldataReaders.readInt24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#948-954) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#951-953)
CalldataReaders.readInt32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#957-963) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#960-962)
CalldataReaders.readInt40(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#966-972) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#969-971)
CalldataReaders.readInt48(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#975-981) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#978-980)
CalldataReaders.readInt56(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#984-990) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#987-989)
CalldataReaders.readInt64(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#993-999) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#996-998)
CalldataReaders.readInt72(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1002-1008) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1005-1007)
CalldataReaders.readInt80(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1011-1017) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1014-1016)
CalldataReaders.readInt88(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1020-1026) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1023-1025)
CalldataReaders.readInt96(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1029-1035) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1032-1034)
CalldataReaders.readInt104(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1038-1044) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1041-1043)
CalldataReaders.readInt112(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1047-1053) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1050-1052)
CalldataReaders.readInt120(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1056-1062) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1059-1061)
CalldataReaders.readInt128(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1065-1071) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1068-1070)
CalldataReaders.readInt136(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1074-1080) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1077-1079)
CalldataReaders.readInt144(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1083-1089) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1086-1088)
CalldataReaders.readInt152(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1092-1098) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1095-1097)
CalldataReaders.readInt160(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1101-1107) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1104-1106)
CalldataReaders.readInt168(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1110-1116) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1113-1115)
CalldataReaders.readInt176(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1119-1125) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1122-1124)
CalldataReaders.readInt184(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1128-1134) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1131-1133)
CalldataReaders.readInt192(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1137-1143) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1140-1142)
CalldataReaders.readInt200(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1146-1152) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1149-1151)
CalldataReaders.readInt208(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1155-1161) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1158-1160)
CalldataReaders.readInt216(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1164-1170) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1167-1169)
CalldataReaders.readInt224(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1173-1179) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1176-1178)
CalldataReaders.readInt232(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1182-1188) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1185-1187)
CalldataReaders.readInt240(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1191-1197) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1194-1196)
CalldataReaders.readInt248(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1200-1206) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1203-1205)
CalldataReaders.readInt256(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1209-1215) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1212-1214)
ReturndataReaders.readBool(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1227-1234) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1230-1233)
ReturndataReaders.readAddress(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1237-1244) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1240-1243)
ReturndataReaders.readBytes1(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1247-1254) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1250-1253)
ReturndataReaders.readBytes2(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1257-1264) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1260-1263)
ReturndataReaders.readBytes3(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1267-1274) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1270-1273)
ReturndataReaders.readBytes4(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1277-1284) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1280-1283)
ReturndataReaders.readBytes5(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1287-1294) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1290-1293)
ReturndataReaders.readBytes6(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1297-1304) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1300-1303)
ReturndataReaders.readBytes7(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1307-1314) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1310-1313)
ReturndataReaders.readBytes8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1317-1324) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1320-1323)
ReturndataReaders.readBytes9(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1327-1334) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1330-1333)
ReturndataReaders.readBytes10(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1337-1344) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1340-1343)
ReturndataReaders.readBytes11(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1347-1354) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1350-1353)
ReturndataReaders.readBytes12(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1357-1364) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1360-1363)
ReturndataReaders.readBytes13(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1367-1374) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1370-1373)
ReturndataReaders.readBytes14(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1377-1384) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1380-1383)
ReturndataReaders.readBytes15(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1387-1394) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1390-1393)
ReturndataReaders.readBytes16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1397-1404) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1400-1403)
ReturndataReaders.readBytes17(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1407-1414) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1410-1413)
ReturndataReaders.readBytes18(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1417-1424) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1420-1423)
ReturndataReaders.readBytes19(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1427-1434) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1430-1433)
ReturndataReaders.readBytes20(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1437-1444) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1440-1443)
ReturndataReaders.readBytes21(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1447-1454) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1450-1453)
ReturndataReaders.readBytes22(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1457-1464) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1460-1463)
ReturndataReaders.readBytes23(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1467-1474) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1470-1473)
ReturndataReaders.readBytes24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1477-1484) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1480-1483)
ReturndataReaders.readBytes25(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1487-1494) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1490-1493)
ReturndataReaders.readBytes26(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1497-1504) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1500-1503)
ReturndataReaders.readBytes27(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1507-1514) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1510-1513)
ReturndataReaders.readBytes28(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1517-1524) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1520-1523)
ReturndataReaders.readBytes29(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1527-1534) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1530-1533)
ReturndataReaders.readBytes30(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1537-1544) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1540-1543)
ReturndataReaders.readBytes31(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1547-1554) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1550-1553)
ReturndataReaders.readBytes32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1557-1564) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1560-1563)
ReturndataReaders.readUint8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1567-1574) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1570-1573)
ReturndataReaders.readUint16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1577-1584) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1580-1583)
ReturndataReaders.readUint24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1587-1594) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1590-1593)
ReturndataReaders.readUint32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1597-1604) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1600-1603)
ReturndataReaders.readUint40(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1607-1614) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1610-1613)
ReturndataReaders.readUint48(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1617-1624) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1620-1623)
ReturndataReaders.readUint56(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1627-1634) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1630-1633)
ReturndataReaders.readUint64(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1637-1644) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1640-1643)
ReturndataReaders.readUint72(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1647-1654) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1650-1653)
ReturndataReaders.readUint80(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1657-1664) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1660-1663)
ReturndataReaders.readUint88(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1667-1674) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1670-1673)
ReturndataReaders.readUint96(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1677-1684) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1680-1683)
ReturndataReaders.readUint104(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1687-1694) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1690-1693)
ReturndataReaders.readUint112(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1697-1704) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1700-1703)
ReturndataReaders.readUint120(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1707-1714) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1710-1713)
ReturndataReaders.readUint128(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1717-1724) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1720-1723)
ReturndataReaders.readUint136(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1727-1734) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1730-1733)
ReturndataReaders.readUint144(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1737-1744) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1740-1743)
ReturndataReaders.readUint152(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1747-1754) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1750-1753)
ReturndataReaders.readUint160(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1757-1764) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1760-1763)
ReturndataReaders.readUint168(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1767-1774) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1770-1773)
ReturndataReaders.readUint176(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1777-1784) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1780-1783)
ReturndataReaders.readUint184(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1787-1794) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1790-1793)
ReturndataReaders.readUint192(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1797-1804) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1800-1803)
ReturndataReaders.readUint200(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1807-1814) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1810-1813)
ReturndataReaders.readUint208(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1817-1824) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1820-1823)
ReturndataReaders.readUint216(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1827-1834) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1830-1833)
ReturndataReaders.readUint224(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1837-1844) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1840-1843)
ReturndataReaders.readUint232(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1847-1854) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1850-1853)
ReturndataReaders.readUint240(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1857-1864) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1860-1863)
ReturndataReaders.readUint248(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1867-1874) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1870-1873)
ReturndataReaders.readUint256(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1877-1884) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1880-1883)
ReturndataReaders.readInt8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1887-1894) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1890-1893)
ReturndataReaders.readInt16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1897-1904) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1900-1903)
ReturndataReaders.readInt24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1907-1914) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1910-1913)
ReturndataReaders.readInt32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1917-1924) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1920-1923)
ReturndataReaders.readInt40(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1927-1934) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1930-1933)
ReturndataReaders.readInt48(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1937-1944) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1940-1943)
ReturndataReaders.readInt56(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1947-1954) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1950-1953)
ReturndataReaders.readInt64(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1957-1964) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1960-1963)
ReturndataReaders.readInt72(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1967-1974) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1970-1973)
ReturndataReaders.readInt80(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1977-1984) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1980-1983)
ReturndataReaders.readInt88(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1987-1994) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1990-1993)
ReturndataReaders.readInt96(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1997-2004) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2000-2003)
ReturndataReaders.readInt104(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2007-2014) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2010-2013)
ReturndataReaders.readInt112(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2017-2024) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2020-2023)
ReturndataReaders.readInt120(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2027-2034) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2030-2033)
ReturndataReaders.readInt128(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2037-2044) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2040-2043)
ReturndataReaders.readInt136(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2047-2054) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2050-2053)
ReturndataReaders.readInt144(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2057-2064) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2060-2063)
ReturndataReaders.readInt152(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2067-2074) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2070-2073)
ReturndataReaders.readInt160(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2077-2084) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2080-2083)
ReturndataReaders.readInt168(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2087-2094) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2090-2093)
ReturndataReaders.readInt176(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2097-2104) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2100-2103)
ReturndataReaders.readInt184(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2107-2114) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2110-2113)
ReturndataReaders.readInt192(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2117-2124) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2120-2123)
ReturndataReaders.readInt200(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2127-2134) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2130-2133)
ReturndataReaders.readInt208(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2137-2144) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2140-2143)
ReturndataReaders.readInt216(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2147-2154) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2150-2153)
ReturndataReaders.readInt224(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2157-2164) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2160-2163)
ReturndataReaders.readInt232(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2167-2174) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2170-2173)
ReturndataReaders.readInt240(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2177-2184) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2180-2183)
ReturndataReaders.readInt248(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2187-2194) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2190-2193)
ReturndataReaders.readInt256(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2197-2204) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2200-2203)
MemoryReaders.readMemoryPointer(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2209-2215) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2212-2214)
MemoryReaders.readBool(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2225-2229) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2226-2228)
MemoryReaders.readAddress(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2232-2238) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2235-2237)
MemoryReaders.readBytes1(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2241-2247) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2244-2246)
MemoryReaders.readBytes2(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2250-2256) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2253-2255)
MemoryReaders.readBytes3(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2259-2265) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2262-2264)
MemoryReaders.readBytes4(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2268-2274) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2271-2273)
MemoryReaders.readBytes5(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2277-2283) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2280-2282)
MemoryReaders.readBytes6(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2286-2292) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2289-2291)
MemoryReaders.readBytes7(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2295-2301) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2298-2300)
MemoryReaders.readBytes8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2304-2310) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2307-2309)
MemoryReaders.readBytes9(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2313-2319) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2316-2318)
MemoryReaders.readBytes10(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2322-2328) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2325-2327)
MemoryReaders.readBytes11(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2331-2337) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2334-2336)
MemoryReaders.readBytes12(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2340-2346) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2343-2345)
MemoryReaders.readBytes13(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2349-2355) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2352-2354)
MemoryReaders.readBytes14(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2358-2364) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2361-2363)
MemoryReaders.readBytes15(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2367-2373) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2370-2372)
MemoryReaders.readBytes16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2376-2382) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2379-2381)
MemoryReaders.readBytes17(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2385-2391) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2388-2390)
MemoryReaders.readBytes18(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2394-2400) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2397-2399)
MemoryReaders.readBytes19(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2403-2409) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2406-2408)
MemoryReaders.readBytes20(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2412-2418) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2415-2417)
MemoryReaders.readBytes21(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2421-2427) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2424-2426)
MemoryReaders.readBytes22(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2430-2436) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2433-2435)
MemoryReaders.readBytes23(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2439-2445) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2442-2444)
MemoryReaders.readBytes24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2448-2454) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2451-2453)
MemoryReaders.readBytes25(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2457-2463) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2460-2462)
MemoryReaders.readBytes26(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2466-2472) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2469-2471)
MemoryReaders.readBytes27(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2475-2481) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2478-2480)
MemoryReaders.readBytes28(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2484-2490) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2487-2489)
MemoryReaders.readBytes29(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2493-2499) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2496-2498)
MemoryReaders.readBytes30(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2502-2508) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2505-2507)
MemoryReaders.readBytes31(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2511-2517) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2514-2516)
MemoryReaders.readBytes32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2520-2526) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2523-2525)
MemoryReaders.readUint8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2529-2533) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2530-2532)
MemoryReaders.readUint16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2536-2542) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2539-2541)
MemoryReaders.readUint24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2545-2551) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2548-2550)
MemoryReaders.readUint32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2554-2560) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2557-2559)
MemoryReaders.readUint40(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2563-2569) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2566-2568)
MemoryReaders.readUint48(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2572-2578) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2575-2577)
MemoryReaders.readUint56(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2581-2587) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2584-2586)
MemoryReaders.readUint64(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2590-2596) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2593-2595)
MemoryReaders.readUint72(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2599-2605) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2602-2604)
MemoryReaders.readUint80(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2608-2614) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2611-2613)
MemoryReaders.readUint88(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2617-2623) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2620-2622)
MemoryReaders.readUint96(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2626-2632) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2629-2631)
MemoryReaders.readUint104(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2635-2641) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2638-2640)
MemoryReaders.readUint112(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2644-2650) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2647-2649)
MemoryReaders.readUint120(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2653-2659) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2656-2658)
MemoryReaders.readUint128(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2662-2668) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2665-2667)
MemoryReaders.readUint136(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2671-2677) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2674-2676)
MemoryReaders.readUint144(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2680-2686) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2683-2685)
MemoryReaders.readUint152(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2689-2695) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2692-2694)
MemoryReaders.readUint160(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2698-2704) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2701-2703)
MemoryReaders.readUint168(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2707-2713) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2710-2712)
MemoryReaders.readUint176(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2716-2722) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2719-2721)
MemoryReaders.readUint184(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2725-2731) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2728-2730)
MemoryReaders.readUint192(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2734-2740) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2737-2739)
MemoryReaders.readUint200(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2743-2749) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2746-2748)
MemoryReaders.readUint208(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2752-2758) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2755-2757)
MemoryReaders.readUint216(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2761-2767) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2764-2766)
MemoryReaders.readUint224(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2770-2776) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2773-2775)
MemoryReaders.readUint232(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2779-2785) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2782-2784)
MemoryReaders.readUint240(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2788-2794) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2791-2793)
MemoryReaders.readUint248(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2797-2803) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2800-2802)
MemoryReaders.readUint256(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2806-2812) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2809-2811)
MemoryReaders.readInt8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2815-2819) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2816-2818)
MemoryReaders.readInt16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2822-2826) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2823-2825)
MemoryReaders.readInt24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2829-2833) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2830-2832)
MemoryReaders.readInt32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2836-2840) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2837-2839)
MemoryReaders.readInt40(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2843-2847) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2844-2846)
MemoryReaders.readInt48(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2850-2854) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2851-2853)
MemoryReaders.readInt56(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2857-2861) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2858-2860)
MemoryReaders.readInt64(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2864-2868) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2865-2867)
MemoryReaders.readInt72(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2871-2875) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2872-2874)
MemoryReaders.readInt80(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2878-2882) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2879-2881)
MemoryReaders.readInt88(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2885-2889) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2886-2888)
MemoryReaders.readInt96(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2892-2896) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2893-2895)
MemoryReaders.readInt104(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2899-2905) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2902-2904)
MemoryReaders.readInt112(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2908-2914) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2911-2913)
MemoryReaders.readInt120(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2917-2923) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2920-2922)
MemoryReaders.readInt128(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2926-2932) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2929-2931)
MemoryReaders.readInt136(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2935-2941) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2938-2940)
MemoryReaders.readInt144(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2944-2950) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2947-2949)
MemoryReaders.readInt152(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2953-2959) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2956-2958)
MemoryReaders.readInt160(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2962-2968) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2965-2967)
MemoryReaders.readInt168(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2971-2977) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2974-2976)
MemoryReaders.readInt176(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2980-2986) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2983-2985)
MemoryReaders.readInt184(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2989-2995) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2992-2994)
MemoryReaders.readInt192(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2998-3004) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3001-3003)
MemoryReaders.readInt200(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3007-3013) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3010-3012)
MemoryReaders.readInt208(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3016-3022) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3019-3021)
MemoryReaders.readInt216(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3025-3031) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3028-3030)
MemoryReaders.readInt224(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3034-3040) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3037-3039)
MemoryReaders.readInt232(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3043-3049) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3046-3048)
MemoryReaders.readInt240(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3052-3058) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3055-3057)
MemoryReaders.readInt248(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3061-3067) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3064-3066)
MemoryReaders.readInt256(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3070-3076) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3073-3075)
MemoryWriters.write(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3081-3085) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3082-3084)
MemoryWriters.write(MemoryPointer,bool) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3088-3092) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3089-3091)
MemoryWriters.write(MemoryPointer,address) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3095-3099) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3096-3098)
MemoryWriters.writeBytes32(MemoryPointer,bytes32) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3103-3107) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3104-3106)
MemoryWriters.write(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3110-3114) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3111-3113)
MemoryWriters.writeInt(MemoryPointer,int256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3118-3122) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3119-3121)
StructPointers.toMemoryPointer(OrderComponents) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#307-313) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#310-312)
StructPointers.toCalldataPointer(OrderComponents) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#322-328) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#325-327)
StructPointers.toMemoryPointer(OfferItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#337-343) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#340-342)
StructPointers.toCalldataPointer(OfferItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#352-358) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#355-357)
StructPointers.toMemoryPointer(ConsiderationItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#367-373) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#370-372)
StructPointers.toCalldataPointer(ConsiderationItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#382-388) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#385-387)
StructPointers.toMemoryPointer(SpentItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#397-403) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#400-402)
StructPointers.toCalldataPointer(SpentItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#412-418) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#415-417)
StructPointers.toMemoryPointer(ReceivedItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#427-433) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#430-432)
StructPointers.toCalldataPointer(ReceivedItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#442-448) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#445-447)
StructPointers.toMemoryPointer(BasicOrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#457-463) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#460-462)
StructPointers.toCalldataPointer(BasicOrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#472-478) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#475-477)
StructPointers.toMemoryPointer(AdditionalRecipient) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#487-493) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#490-492)
StructPointers.toCalldataPointer(AdditionalRecipient) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#502-508) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#505-507)
StructPointers.toMemoryPointer(OrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#517-523) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#520-522)
StructPointers.toCalldataPointer(OrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#532-538) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#535-537)
StructPointers.toMemoryPointer(Order) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#547-553) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#550-552)
StructPointers.toCalldataPointer(Order) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#562-568) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#565-567)
StructPointers.toMemoryPointer(AdvancedOrder) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#577-583) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#580-582)
StructPointers.toCalldataPointer(AdvancedOrder) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#592-598) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#595-597)
StructPointers.toMemoryPointer(OrderStatus) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#607-613) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#610-612)
StructPointers.toCalldataPointer(OrderStatus) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#622-628) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#625-627)
StructPointers.toMemoryPointer(CriteriaResolver) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#637-643) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#640-642)
StructPointers.toCalldataPointer(CriteriaResolver) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#652-658) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#655-657)
StructPointers.toMemoryPointer(Fulfillment) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#667-673) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#670-672)
StructPointers.toCalldataPointer(Fulfillment) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#682-688) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#685-687)
StructPointers.toMemoryPointer(FulfillmentComponent) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#697-703) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#700-702)
StructPointers.toCalldataPointer(FulfillmentComponent) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#712-718) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#715-717)
StructPointers.toMemoryPointer(Execution) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#727-733) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#730-732)
StructPointers.toCalldataPointer(Execution) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#742-748) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#745-747)
StructPointers.toMemoryPointer(ZoneParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#757-763) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#760-762)
StructPointers.toCalldataPointer(ZoneParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#772-778) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#775-777)
MerkleProofLib.verify(bytes32[],bytes32,bytes32) (lib/solady/src/utils/MerkleProofLib.sol#14-43) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#20-42)
MerkleProofLib.verifyCalldata(bytes32[],bytes32,bytes32) (lib/solady/src/utils/MerkleProofLib.sol#46-75) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#52-74)
MerkleProofLib.verifyMultiProof(bytes32[],bytes32,bytes32[],bool[]) (lib/solady/src/utils/MerkleProofLib.sol#87-180) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#102-179)
MerkleProofLib.verifyMultiProofCalldata(bytes32[],bytes32,bytes32[],bool[]) (lib/solady/src/utils/MerkleProofLib.sol#191-280) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#206-279)
MerkleProofLib.emptyProof() (lib/solady/src/utils/MerkleProofLib.sol#287-292) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#289-291)
MerkleProofLib.emptyLeaves() (lib/solady/src/utils/MerkleProofLib.sol#295-300) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#297-299)
MerkleProofLib.emptyFlags() (lib/solady/src/utils/MerkleProofLib.sol#303-308) uses assembly
	- INLINE ASM (lib/solady/src/utils/MerkleProofLib.sol#305-307)
FixedPointMathLib.mulDivDown(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#36-51) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#42-50)
FixedPointMathLib.mulDivUp(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#53-69) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#59-68)
FixedPointMathLib.rpow(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#71-158) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#77-157)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#166-226)
FixedPointMathLib.unsafeMod(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#229-236) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#231-235)
FixedPointMathLib.unsafeDiv(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#238-245) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#240-244)
FixedPointMathLib.unsafeDivUp(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#247-254) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#249-253)
SafeTransferLib.safeTransferETH(address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#15-25) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#19-22)
SafeTransferLib.safeTransferFrom(ERC20,address,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#31-63) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#40-60)
SafeTransferLib.safeTransfer(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#65-95) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#73-92)
SafeTransferLib.safeApprove(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#97-127) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#105-124)
UserVault._vaultExists(uint256) (src/lib/UserVault.sol#387-396) uses assembly
	- INLINE ASM (src/lib/UserVault.sol#390-395)
PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#97-126) uses assembly
	- INLINE ASM (src/lib/callbacks/PurchaseBundler.sol#115-117)
OraclePoolOfferHandler._isZeroAddress(address) (src/lib/pools/OraclePoolOfferHandler.sol#400-406) uses assembly
	- INLINE ASM (src/lib/pools/OraclePoolOfferHandler.sol#402-404)
Pool._isZeroAddress(address) (src/lib/pools/Pool.sol#793-799) uses assembly
	- INLINE ASM (src/lib/pools/Pool.sol#795-797)
BytesLib.slice(bytes,uint256,uint256) (src/lib/utils/BytesLib.sol#12-70) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#19-67)
BytesLib.toAddress(bytes,uint256) (src/lib/utils/BytesLib.sol#72-82) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#77-79)
BytesLib.toUint24(bytes,uint256) (src/lib/utils/BytesLib.sol#84-94) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#89-91)
ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes) (src/lib/utils/ValidatorHelpers.sol#15-70) uses assembly
	- INLINE ASM (src/lib/utils/ValidatorHelpers.sol#30-68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.8.0', '>=0.8.13', '^0.8.13', '^0.8.20', '^0.8.21', '^0.8.4']
	- >=0.8.0 (lib/solmate/src/auth/Owned.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/ERC20.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/ERC721.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/WETH.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/FixedPointMathLib.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/ReentrancyGuard.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/SafeTransferLib.sol#2)
	- >=0.8.0 (src/lib/pools/ERC4626.sol#2)
	- >=0.8.13 (lib/delegate-registry/src/IDelegateRegistry.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationEnums.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#2)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#3)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#5)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#5)
	- ^0.8.20 (src/interfaces/IAuctionLoanLiquidator.sol#2)
	- ^0.8.20 (src/interfaces/ILiquidationDistributor.sol#2)
	- ^0.8.20 (src/interfaces/ILoanLiquidator.sol#2)
	- ^0.8.20 (src/interfaces/IMulticall.sol#2)
	- ^0.8.20 (src/interfaces/INFTFlashAction.sol#2)
	- ^0.8.20 (src/interfaces/IUserVault.sol#2)
	- ^0.8.20 (src/interfaces/callbacks/ILoanCallback.sol#3)
	- ^0.8.20 (src/interfaces/callbacks/IPurchaseBundler.sol#3)
	- ^0.8.20 (src/interfaces/external/ICryptoPunksMarket.sol#3)
	- ^0.8.20 (src/interfaces/external/IReservoir.sol#3)
	- ^0.8.20 (src/interfaces/external/IWrappedPunk.sol#3)
	- ^0.8.20 (src/interfaces/loans/IBaseLoan.sol#2)
	- ^0.8.20 (src/interfaces/loans/ILoanManagerRegistry.sol#2)
	- ^0.8.20 (src/interfaces/validators/IOfferValidator.sol#2)
	- ^0.8.21 (src/interfaces/ILiquidationHandler.sol#2)
	- ^0.8.21 (src/interfaces/IOldERC721.sol#2)
	- ^0.8.21 (src/interfaces/external/IAaveLendingPool.sol#2)
	- ^0.8.21 (src/interfaces/external/IAaveRewardsController.sol#3)
	- ^0.8.21 (src/interfaces/external/ICurve.sol#3)
	- ^0.8.21 (src/interfaces/external/ILido.sol#2)
	- ^0.8.21 (src/interfaces/loans/ILoanManager.sol#2)
	- ^0.8.21 (src/interfaces/loans/IMultiSourceLoan.sol#2)
	- ^0.8.21 (src/interfaces/pools/IBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/interfaces/pools/IFeeManager.sol#2)
	- ^0.8.21 (src/interfaces/pools/IOracle.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPool.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPoolOfferHandler.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPoolWithWithdrawalQueues.sol#2)
	- ^0.8.21 (src/lib/AddressManager.sol#2)
	- ^0.8.21 (src/lib/AuctionLoanLiquidator.sol#2)
	- ^0.8.21 (src/lib/AuctionWithBuyoutLoanLiquidator.sol#2)
	- ^0.8.21 (src/lib/InputChecker.sol#2)
	- ^0.8.21 (src/lib/LiquidationDistributor.sol#2)
	- ^0.8.21 (src/lib/LiquidationHandler.sol#2)
	- ^0.8.21 (src/lib/Multicall.sol#2)
	- ^0.8.21 (src/lib/UserVault.sol#2)
	- ^0.8.21 (src/lib/callbacks/CallbackHandler.sol#2)
	- ^0.8.21 (src/lib/callbacks/PurchaseBundler.sol#2)
	- ^0.8.21 (src/lib/loans/BaseLoan.sol#2)
	- ^0.8.21 (src/lib/loans/LoanManager.sol#2)
	- ^0.8.21 (src/lib/loans/LoanManagerParameterSetter.sol#2)
	- ^0.8.21 (src/lib/loans/LoanManagerRegistry.sol#2)
	- ^0.8.21 (src/lib/loans/MultiSourceLoan.sol#2)
	- ^0.8.21 (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/lib/pools/FeeManager.sol#2)
	- ^0.8.21 (src/lib/pools/LidoEthBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/lib/pools/Oracle.sol#2)
	- ^0.8.21 (src/lib/pools/OraclePoolOfferHandler.sol#2)
	- ^0.8.21 (src/lib/pools/Pool.sol#2)
	- ^0.8.21 (src/lib/pools/PoolOfferHandler.sol#2)
	- ^0.8.21 (src/lib/pools/WithdrawalQueue.sol#2)
	- ^0.8.21 (src/lib/utils/BytesLib.sol#9)
	- ^0.8.21 (src/lib/utils/Hash.sol#2)
	- ^0.8.21 (src/lib/utils/Interest.sol#2)
	- ^0.8.21 (src/lib/utils/TwoStepOwned.sol#2)
	- ^0.8.21 (src/lib/utils/ValidatorHelpers.sol#2)
	- ^0.8.21 (src/lib/utils/WithProtocolFee.sol#2)
	- ^0.8.21 (src/lib/validators/NftBitVectorValidator.sol#2)
	- ^0.8.21 (src/lib/validators/NftPackedListValidator.sol#2)
	- ^0.8.21 (src/lib/validators/RangeValidator.sol#2)
	- ^0.8.4 (lib/solady/src/utils/MerkleProofLib.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressManager._add(address) (src/lib/AddressManager.sol#89-104) has costly operations inside a loop:
	- ++ _lastAdded (src/lib/AddressManager.sol#95)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
getFreeMemoryPointer() (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#40-42) is never used and should be removed
malloc(uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#31-36) is never used and should be removed
setFreeMemoryPointer(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#46-48) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.8.13 (lib/delegate-registry/src/IDelegateRegistry.sol#2) allows old versions
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2) allows old versions
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationEnums.sol#2) allows old versions
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#2) allows old versions
Pragma version^0.8.4 (lib/solady/src/utils/MerkleProofLib.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/auth/Owned.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/ERC20.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/ERC721.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/WETH.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/FixedPointMathLib.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/ReentrancyGuard.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/SafeTransferLib.sol#2) allows old versions
Pragma version^0.8.20 (src/interfaces/IAuctionLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/ILiquidationDistributor.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/ILiquidationHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/ILoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/IMulticall.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/INFTFlashAction.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/IOldERC721.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/IUserVault.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/callbacks/ILoanCallback.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/callbacks/IPurchaseBundler.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/IAaveLendingPool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/IAaveRewardsController.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/ICryptoPunksMarket.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/ICurve.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/ILido.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/IReservoir.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/IWrappedPunk.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/loans/IBaseLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/loans/ILoanManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/loans/ILoanManagerRegistry.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/loans/IMultiSourceLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IFeeManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IOracle.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPoolOfferHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPoolWithWithdrawalQueues.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/validators/IOfferValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AddressManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AuctionLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AuctionWithBuyoutLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/InputChecker.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/LiquidationDistributor.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/LiquidationHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/Multicall.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/UserVault.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/callbacks/CallbackHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/callbacks/PurchaseBundler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/BaseLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/LoanManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/LoanManagerParameterSetter.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/LoanManagerRegistry.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/MultiSourceLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version>=0.8.0 (src/lib/pools/ERC4626.sol#2) allows old versions
Pragma version^0.8.21 (src/lib/pools/FeeManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/LidoEthBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/Oracle.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/OraclePoolOfferHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/Pool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/PoolOfferHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/WithdrawalQueue.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/BytesLib.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/Hash.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/Interest.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/TwoStepOwned.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/ValidatorHelpers.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/WithProtocolFee.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/NftBitVectorValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/NftPackedListValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/RangeValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
solc-0.8.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Multicall.multicall(bytes[]) (src/lib/Multicall.sol#10-25):
	- (success,results[i]) = address(this).delegatecall(data[i]) (src/lib/Multicall.sol#16)
Low level call in UserVault._withdrawEth(uint256) (src/lib/UserVault.sol#370-385):
	- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#379)
Low level call in PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#97-126):
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#119)
Low level call in PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes) (src/lib/callbacks/PurchaseBundler.sol#146-180):
	- (success) = executionInfo.module.call{value: executionInfo.value}(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#163)
Low level call in PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#184-228):
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#203)
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#211)
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Parameter CalldataPointerLib.offset(CalldataPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#117) is not in mixedCase
Parameter ReturndataPointerLib.offset(ReturndataPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#204) is not in mixedCase
Parameter MemoryPointerLib.offset(MemoryPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#299) is not in mixedCase
Function ERC20.DOMAIN_SEPARATOR() (lib/solmate/src/tokens/ERC20.sol#162-164) is not in mixedCase
Variable ERC20.INITIAL_CHAIN_ID (lib/solmate/src/tokens/ERC20.sol#41) is not in mixedCase
Variable ERC20.INITIAL_DOMAIN_SEPARATOR (lib/solmate/src/tokens/ERC20.sol#43) is not in mixedCase
Function IUserVault.ERC721OwnerOf(address,uint256) (src/interfaces/IUserVault.sol#32) is not in mixedCase
Function IUserVault.ERC20BalanceOf(uint256,address) (src/interfaces/IUserVault.sol#38) is not in mixedCase
Parameter ICurve.exchange(uint128,uint128,uint256,uint256)._min_dy (src/interfaces/external/ICurve.sol#9) is not in mixedCase
Function IFeeManager.PRECISION() (src/interfaces/pools/IFeeManager.sol#14) is not in mixedCase
Parameter AddressManager.add(address)._entry (src/lib/AddressManager.sol#47) is not in mixedCase
Parameter AddressManager.addToWhitelist(address)._entry (src/lib/AddressManager.sol#53) is not in mixedCase
Parameter AddressManager.removeFromWhitelist(address)._entry (src/lib/AddressManager.sol#65) is not in mixedCase
Parameter AddressManager.addressToIndex(address)._address (src/lib/AddressManager.sol#73) is not in mixedCase
Parameter AddressManager.indexToAddress(uint16)._index (src/lib/AddressManager.sol#79) is not in mixedCase
Parameter AddressManager.isWhitelisted(address)._entry (src/lib/AddressManager.sol#85) is not in mixedCase
Parameter AuctionLoanLiquidator.addLoanContract(address)._loanContract (src/lib/AuctionLoanLiquidator.sol#133) is not in mixedCase
Parameter AuctionLoanLiquidator.removeLoanContract(address)._loanContract (src/lib/AuctionLoanLiquidator.sol#142) is not in mixedCase
Parameter AuctionLoanLiquidator.updateLiquidationDistributor(address).__liquidationDistributor (src/lib/AuctionLoanLiquidator.sol#156) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._loanId (src/lib/AuctionLoanLiquidator.sol#181) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._nftAddress (src/lib/AuctionLoanLiquidator.sol#182) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._tokenId (src/lib/AuctionLoanLiquidator.sol#183) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._asset (src/lib/AuctionLoanLiquidator.sol#184) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._duration (src/lib/AuctionLoanLiquidator.sol#185) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._minBid (src/lib/AuctionLoanLiquidator.sol#186) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,uint256,address)._originator (src/lib/AuctionLoanLiquidator.sol#187) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._nftAddress (src/lib/AuctionLoanLiquidator.sol#231) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._tokenId (src/lib/AuctionLoanLiquidator.sol#231) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._auction (src/lib/AuctionLoanLiquidator.sol#231) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._bid (src/lib/AuctionLoanLiquidator.sol#231) is not in mixedCase
Parameter AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._auction (src/lib/AuctionLoanLiquidator.sol#270) is not in mixedCase
Parameter AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._loan (src/lib/AuctionLoanLiquidator.sol#270) is not in mixedCase
Parameter AuctionLoanLiquidator.getAuctionHash(address,uint256)._nftAddress (src/lib/AuctionLoanLiquidator.sol#317) is not in mixedCase
Parameter AuctionLoanLiquidator.getAuctionHash(address,uint256)._tokenId (src/lib/AuctionLoanLiquidator.sol#317) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._nftAddress (src/lib/AuctionWithBuyoutLoanLiquidator.sol#66) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._tokenId (src/lib/AuctionWithBuyoutLoanLiquidator.sol#67) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._auction (src/lib/AuctionWithBuyoutLoanLiquidator.sol#68) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._loan (src/lib/AuctionWithBuyoutLoanLiquidator.sol#69) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.setTimeForMainLenderToBuy(uint256).__timeForMainLenderToBuy (src/lib/AuctionWithBuyoutLoanLiquidator.sol#133) is not in mixedCase
Parameter InputChecker.checkNotZero(address)._address (src/lib/InputChecker.sol#10) is not in mixedCase
Parameter LiquidationDistributor.setLiquidator(address)._liquidator (src/lib/LiquidationDistributor.sol#37) is not in mixedCase
Parameter LiquidationDistributor.distribute(address,uint256,IMultiSourceLoan.Loan)._loanAddress (src/lib/LiquidationDistributor.sol#47) is not in mixedCase
Parameter LiquidationDistributor.distribute(address,uint256,IMultiSourceLoan.Loan)._proceeds (src/lib/LiquidationDistributor.sol#47) is not in mixedCase
Parameter LiquidationDistributor.distribute(address,uint256,IMultiSourceLoan.Loan)._loan (src/lib/LiquidationDistributor.sol#47) is not in mixedCase
Parameter LiquidationHandler.updateLiquidationContract(address).__loanLiquidator (src/lib/LiquidationHandler.sol#74) is not in mixedCase
Parameter LiquidationHandler.updateLiquidationAuctionDuration(uint48)._newDuration (src/lib/LiquidationHandler.sol#82) is not in mixedCase
Parameter UserVault.burn(uint256,address)._vaultId (src/lib/UserVault.sol#95) is not in mixedCase
Parameter UserVault.burn(uint256,address)._assetRecipient (src/lib/UserVault.sol#95) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._vaultId (src/lib/UserVault.sol#101) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._collections (src/lib/UserVault.sol#102) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._tokenIds (src/lib/UserVault.sol#103) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._oldCollections (src/lib/UserVault.sol#104) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._oldTokenIds (src/lib/UserVault.sol#105) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[],uint256[],address[])._tokens (src/lib/UserVault.sol#106) is not in mixedCase
Function UserVault.ERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#139-141) is not in mixedCase
Parameter UserVault.ERC721OwnerOf(address,uint256)._collection (src/lib/UserVault.sol#139) is not in mixedCase
Parameter UserVault.ERC721OwnerOf(address,uint256)._tokenId (src/lib/UserVault.sol#139) is not in mixedCase
Function UserVault.OldERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#143-145) is not in mixedCase
Parameter UserVault.OldERC721OwnerOf(address,uint256)._collection (src/lib/UserVault.sol#143) is not in mixedCase
Parameter UserVault.OldERC721OwnerOf(address,uint256)._tokenId (src/lib/UserVault.sol#143) is not in mixedCase
Function UserVault.ERC20BalanceOf(uint256,address) (src/lib/UserVault.sol#147-149) is not in mixedCase
Parameter UserVault.ERC20BalanceOf(uint256,address)._vaultId (src/lib/UserVault.sol#147) is not in mixedCase
Parameter UserVault.ERC20BalanceOf(uint256,address)._token (src/lib/UserVault.sol#147) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#152) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#152) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#152) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._vaultId (src/lib/UserVault.sol#163) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._collection (src/lib/UserVault.sol#163) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._tokenIds (src/lib/UserVault.sol#163) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#178) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#178) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#178) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._vaultId (src/lib/UserVault.sol#188) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._collection (src/lib/UserVault.sol#188) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._tokenIds (src/lib/UserVault.sol#188) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#205) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._token (src/lib/UserVault.sol#205) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._amount (src/lib/UserVault.sol#205) is not in mixedCase
Parameter UserVault.depositEth(uint256)._vaultId (src/lib/UserVault.sol#216) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#225) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#225) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#225) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._vaultId (src/lib/UserVault.sol#230) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._collections (src/lib/UserVault.sol#230) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._tokenIds (src/lib/UserVault.sol#230) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._vaultId (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._collections (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._tokenIds (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawERC20(uint256,address)._vaultId (src/lib/UserVault.sol#267) is not in mixedCase
Parameter UserVault.withdrawERC20(uint256,address)._token (src/lib/UserVault.sol#267) is not in mixedCase
Parameter UserVault.withdrawERC20s(uint256,address[])._vaultId (src/lib/UserVault.sol#272) is not in mixedCase
Parameter UserVault.withdrawERC20s(uint256,address[])._tokens (src/lib/UserVault.sol#272) is not in mixedCase
Parameter UserVault.tokenURI(uint256)._vaultId (src/lib/UserVault.sol#282) is not in mixedCase
Parameter UserVault.withdrawEth(uint256)._vaultId (src/lib/UserVault.sol#287) is not in mixedCase
Parameter CallbackHandler.addWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#29) is not in mixedCase
Parameter CallbackHandler.removeWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#38) is not in mixedCase
Parameter CallbackHandler.isWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#45) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._loan (src/lib/callbacks/CallbackHandler.sol#55) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._callbackAddress (src/lib/callbacks/CallbackHandler.sol#56) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._callbackData (src/lib/callbacks/CallbackHandler.sol#57) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._fee (src/lib/callbacks/CallbackHandler.sol#58) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._loan (src/lib/callbacks/CallbackHandler.sol#74) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._callbackAddress (src/lib/callbacks/CallbackHandler.sol#75) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._callbackData (src/lib/callbacks/CallbackHandler.sol#76) is not in mixedCase
Parameter PurchaseBundler.buy(bytes[])._executionData (src/lib/callbacks/PurchaseBundler.sol#97) is not in mixedCase
Parameter PurchaseBundler.sell(bytes[])._executionData (src/lib/callbacks/PurchaseBundler.sol#130) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._loan (src/lib/callbacks/PurchaseBundler.sol#146) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._fee (src/lib/callbacks/PurchaseBundler.sol#146) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._executionData (src/lib/callbacks/PurchaseBundler.sol#146) is not in mixedCase
Parameter PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes)._loan (src/lib/callbacks/PurchaseBundler.sol#184) is not in mixedCase
Parameter PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes)._executionData (src/lib/callbacks/PurchaseBundler.sol#184) is not in mixedCase
Parameter PurchaseBundler.updateMultiSourceLoanAddressFirst(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#231) is not in mixedCase
Parameter PurchaseBundler.finalUpdateMultiSourceLoanAddress(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#240) is not in mixedCase
Parameter PurchaseBundler.updateTaxes(IPurchaseBundler.Taxes)._newTaxes (src/lib/callbacks/PurchaseBundler.sol#272) is not in mixedCase
Parameter BaseLoan.updateMinImprovementApr(uint256)._newMinimum (src/lib/loans/BaseLoan.sol#135) is not in mixedCase
Parameter BaseLoan.cancelOffer(uint256)._offerId (src/lib/loans/BaseLoan.sol#152) is not in mixedCase
Parameter BaseLoan.cancelAllOffers(uint256)._minOfferId (src/lib/loans/BaseLoan.sol#160) is not in mixedCase
Parameter BaseLoan.cancelRenegotiationOffer(uint256)._renegotiationId (src/lib/loans/BaseLoan.sol#172) is not in mixedCase
Parameter BaseLoan.getUsedCapacity(address,uint256)._lender (src/lib/loans/BaseLoan.sol#183) is not in mixedCase
Parameter BaseLoan.getUsedCapacity(address,uint256)._offerId (src/lib/loans/BaseLoan.sol#183) is not in mixedCase
Function BaseLoan.DOMAIN_SEPARATOR() (src/lib/loans/BaseLoan.sol#188-190) is not in mixedCase
Variable BaseLoan.INITIAL_CHAIN_ID (src/lib/loans/BaseLoan.sol#29) is not in mixedCase
Variable BaseLoan.INITIAL_DOMAIN_SEPARATOR (src/lib/loans/BaseLoan.sol#30) is not in mixedCase
Parameter LoanManager.updateOfferHandler(address)._offerHandler (src/lib/loans/LoanManager.sol#46) is not in mixedCase
Parameter LoanManager.addCallers(ILoanManager.ProposedCaller[])._callers (src/lib/loans/LoanManager.sol#56) is not in mixedCase
Parameter LoanManager.isCallerAccepted(address)._caller (src/lib/loans/LoanManager.sol#78) is not in mixedCase
Variable LoanManager.UPDATE_WAITING_TIME (src/lib/loans/LoanManager.sol#18) is not in mixedCase
Parameter LoanManagerParameterSetter.setLoanManager(address).__loanManager (src/lib/loans/LoanManagerParameterSetter.sol#45) is not in mixedCase
Parameter LoanManagerParameterSetter.setOfferHandler(address).__offerHandler (src/lib/loans/LoanManagerParameterSetter.sol#60) is not in mixedCase
Parameter LoanManagerParameterSetter.confirmOfferHandler(address).__offerHandler (src/lib/loans/LoanManagerParameterSetter.sol#75) is not in mixedCase
Parameter LoanManagerParameterSetter.requestAddCallers(ILoanManager.ProposedCaller[])._callers (src/lib/loans/LoanManagerParameterSetter.sol#94) is not in mixedCase
Parameter LoanManagerParameterSetter.addCallers(ILoanManager.ProposedCaller[])._callers (src/lib/loans/LoanManagerParameterSetter.sol#104) is not in mixedCase
Variable LoanManagerParameterSetter.UPDATE_WAITING_TIME (src/lib/loans/LoanManagerParameterSetter.sol#19) is not in mixedCase
Parameter LoanManagerRegistry.addLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#17) is not in mixedCase
Parameter LoanManagerRegistry.removeLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#24) is not in mixedCase
Parameter LoanManagerRegistry.isLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#31) is not in mixedCase
Parameter MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData)._loanExecutionData (src/lib/loans/MultiSourceLoan.sol#122) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#161) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#162) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOfferSignature (src/lib/loans/MultiSourceLoan.sol#163) is not in mixedCase
Parameter MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#238) is not in mixedCase
Parameter MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#238) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loanId (src/lib/loans/MultiSourceLoan.sol#316) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loan (src/lib/loans/MultiSourceLoan.sol#317) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loanExecutionData (src/lib/loans/MultiSourceLoan.sol#318) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#366) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#367) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOfferSignature (src/lib/loans/MultiSourceLoan.sol#368) is not in mixedCase
Parameter MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData)._repaymentData (src/lib/loans/MultiSourceLoan.sol#413) is not in mixedCase
Parameter MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan)._loanId (src/lib/loans/MultiSourceLoan.sol#445) is not in mixedCase
Parameter MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#445) is not in mixedCase
Parameter MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan)._loanId (src/lib/loans/MultiSourceLoan.sol#464) is not in mixedCase
Parameter MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#464) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._loanId (src/lib/loans/MultiSourceLoan.sol#476) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._delegate (src/lib/loans/MultiSourceLoan.sol#476) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._rights (src/lib/loans/MultiSourceLoan.sol#476) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._value (src/lib/loans/MultiSourceLoan.sol#476) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._delegate (src/lib/loans/MultiSourceLoan.sol#491) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._collection (src/lib/loans/MultiSourceLoan.sol#491) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._tokenId (src/lib/loans/MultiSourceLoan.sol#491) is not in mixedCase
Parameter MultiSourceLoan.setMinLockPeriod(uint256).__minLockPeriod (src/lib/loans/MultiSourceLoan.sol#507) is not in mixedCase
Parameter MultiSourceLoan.getLoanHash(uint256)._loanId (src/lib/loans/MultiSourceLoan.sol#514) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._loanId (src/lib/loans/MultiSourceLoan.sol#519) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#519) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._target (src/lib/loans/MultiSourceLoan.sol#519) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._data (src/lib/loans/MultiSourceLoan.sol#519) is not in mixedCase
Parameter MultiSourceLoan.setFlashActionContract(address)._newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#543) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.setRewardsController(address)._controller (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#64) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.setRewardsReceiver(address)._receiver (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#70) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool)._currentIdle (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool)._targetIdle (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#92) is not in mixedCase
Parameter FeeManager.setProposedFees(IFeeManager.Fees).__fees (src/lib/pools/FeeManager.sol#39) is not in mixedCase
Parameter FeeManager.confirmFees(IFeeManager.Fees).__fees (src/lib/pools/FeeManager.sol#47) is not in mixedCase
Parameter FeeManager.processFees(uint256,uint256)._principal (src/lib/pools/FeeManager.sol#73) is not in mixedCase
Parameter FeeManager.processFees(uint256,uint256)._interest (src/lib/pools/FeeManager.sol#73) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.setMaxSlippage(uint256)._maxSlippage (src/lib/pools/LidoEthBaseInterestAllocator.sol#69) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._currentIdle (src/lib/pools/LidoEthBaseInterestAllocator.sol#115) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._targetIdle (src/lib/pools/LidoEthBaseInterestAllocator.sol#115) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._force (src/lib/pools/LidoEthBaseInterestAllocator.sol#115) is not in mixedCase
Parameter Oracle.getData(address,uint64,bytes4)._collection (src/lib/pools/Oracle.sol#16) is not in mixedCase
Parameter Oracle.getData(address,uint64,bytes4)._period (src/lib/pools/Oracle.sol#16) is not in mixedCase
Parameter Oracle.getData(address,uint64,bytes4)._key (src/lib/pools/Oracle.sol#16) is not in mixedCase
Parameter Oracle.setData(address,uint64,bytes4,uint128)._collection (src/lib/pools/Oracle.sol#21) is not in mixedCase
Parameter Oracle.setData(address,uint64,bytes4,uint128)._period (src/lib/pools/Oracle.sol#21) is not in mixedCase
Parameter Oracle.setData(address,uint64,bytes4,uint128)._key (src/lib/pools/Oracle.sol#21) is not in mixedCase
Parameter Oracle.setData(address,uint64,bytes4,uint128)._value (src/lib/pools/Oracle.sol#21) is not in mixedCase
Parameter OraclePoolOfferHandler.setPool(address)._pool (src/lib/pools/OraclePoolOfferHandler.sol#141) is not in mixedCase
Parameter OraclePoolOfferHandler.setOracle(address)._oracle (src/lib/pools/OraclePoolOfferHandler.sol#152) is not in mixedCase
Parameter OraclePoolOfferHandler.setAprFactors(OraclePoolOfferHandler.AprFactors)._aprFactors (src/lib/pools/OraclePoolOfferHandler.sol#172) is not in mixedCase
Parameter OraclePoolOfferHandler.getPrincipalFactors(address,uint96,bytes)._collection (src/lib/pools/OraclePoolOfferHandler.sol#205) is not in mixedCase
Parameter OraclePoolOfferHandler.getPrincipalFactors(address,uint96,bytes)._duration (src/lib/pools/OraclePoolOfferHandler.sol#205) is not in mixedCase
Parameter OraclePoolOfferHandler.getPrincipalFactors(address,uint96,bytes)._extra (src/lib/pools/OraclePoolOfferHandler.sol#205) is not in mixedCase
Parameter OraclePoolOfferHandler.getCollectionFactors(address,uint96)._collection (src/lib/pools/OraclePoolOfferHandler.sol#213) is not in mixedCase
Parameter OraclePoolOfferHandler.getCollectionFactors(address,uint96)._duration (src/lib/pools/OraclePoolOfferHandler.sol#213) is not in mixedCase
Parameter OraclePoolOfferHandler.setCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._collection (src/lib/pools/OraclePoolOfferHandler.sol#227) is not in mixedCase
Parameter OraclePoolOfferHandler.setCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._duration (src/lib/pools/OraclePoolOfferHandler.sol#228) is not in mixedCase
Parameter OraclePoolOfferHandler.setCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._extra (src/lib/pools/OraclePoolOfferHandler.sol#229) is not in mixedCase
Parameter OraclePoolOfferHandler.setCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._factor (src/lib/pools/OraclePoolOfferHandler.sol#230) is not in mixedCase
Parameter OraclePoolOfferHandler.confirmCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._collection (src/lib/pools/OraclePoolOfferHandler.sol#255) is not in mixedCase
Parameter OraclePoolOfferHandler.confirmCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._duration (src/lib/pools/OraclePoolOfferHandler.sol#256) is not in mixedCase
Parameter OraclePoolOfferHandler.confirmCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._extra (src/lib/pools/OraclePoolOfferHandler.sol#257) is not in mixedCase
Parameter OraclePoolOfferHandler.confirmCollectionFactors(address[],uint96[],bytes[],OraclePoolOfferHandler.PrincipalFactors[])._factor (src/lib/pools/OraclePoolOfferHandler.sol#258) is not in mixedCase
Parameter OraclePoolOfferHandler.validateOffer(uint256,bytes)._baseRate (src/lib/pools/OraclePoolOfferHandler.sol#291) is not in mixedCase
Parameter OraclePoolOfferHandler.validateOffer(uint256,bytes)._offer (src/lib/pools/OraclePoolOfferHandler.sol#291) is not in mixedCase
Parameter Pool.setOptimalIdleRange(IPool.OptimalIdleRange)._optimalIdleRange (src/lib/pools/Pool.sol#177) is not in mixedCase
Parameter Pool.setBaseInterestAllocator(address)._newBaseInterestAllocator (src/lib/pools/Pool.sol#185) is not in mixedCase
Parameter Pool.collectFees(address)._recipient (src/lib/pools/Pool.sol#222) is not in mixedCase
Parameter Pool.afterCallerAdded(address)._caller (src/lib/pools/Pool.sol#230) is not in mixedCase
Parameter Pool.getDeployedQueue(uint256)._idx (src/lib/pools/Pool.sol#246) is not in mixedCase
Parameter Pool.getOutstandingValuesForQueue(uint256)._idx (src/lib/pools/Pool.sol#253) is not in mixedCase
Parameter Pool.getAccountingValuesForQueue(uint256)._idx (src/lib/pools/Pool.sol#265) is not in mixedCase
Parameter Pool.validateOffer(bytes,uint256)._offer (src/lib/pools/Pool.sol#348) is not in mixedCase
Parameter Pool.validateOffer(bytes,uint256)._protocolFee (src/lib/pools/Pool.sol#348) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._loanId (src/lib/pools/Pool.sol#387) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._principalAmount (src/lib/pools/Pool.sol#388) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._apr (src/lib/pools/Pool.sol#389) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._protocolFee (src/lib/pools/Pool.sol#391) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._startTime (src/lib/pools/Pool.sol#392) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._loanAddress (src/lib/pools/Pool.sol#407) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._loanId (src/lib/pools/Pool.sol#408) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._principalAmount (src/lib/pools/Pool.sol#409) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._apr (src/lib/pools/Pool.sol#410) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._protocolFee (src/lib/pools/Pool.sol#412) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._received (src/lib/pools/Pool.sol#413) is not in mixedCase
Parameter Pool.loanLiquidation(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)._startTime (src/lib/pools/Pool.sol#414) is not in mixedCase
Parameter PoolOfferHandler.setTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[])._termKeys (src/lib/pools/PoolOfferHandler.sol#78) is not in mixedCase
Parameter PoolOfferHandler.setTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[]).__terms (src/lib/pools/PoolOfferHandler.sol#78) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._collection (src/lib/pools/PoolOfferHandler.sol#128) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._duration (src/lib/pools/PoolOfferHandler.sol#129) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._maxSeniorRepayment (src/lib/pools/PoolOfferHandler.sol#130) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._principalAmount (src/lib/pools/PoolOfferHandler.sol#131) is not in mixedCase
Parameter PoolOfferHandler.validateOffer(uint256,bytes)._baseRate (src/lib/pools/PoolOfferHandler.sol#137) is not in mixedCase
Parameter PoolOfferHandler.validateOffer(uint256,bytes)._offer (src/lib/pools/PoolOfferHandler.sol#137) is not in mixedCase
Variable PoolOfferHandler.NEW_TERMS_WAITING_TIME (src/lib/pools/PoolOfferHandler.sol#38) is not in mixedCase
Parameter WithdrawalQueue.mint(address,uint256)._to (src/lib/pools/WithdrawalQueue.sol#61) is not in mixedCase
Parameter WithdrawalQueue.mint(address,uint256)._shares (src/lib/pools/WithdrawalQueue.sol#61) is not in mixedCase
Parameter WithdrawalQueue.withdraw(address,uint256)._to (src/lib/pools/WithdrawalQueue.sol#82) is not in mixedCase
Parameter WithdrawalQueue.withdraw(address,uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#82) is not in mixedCase
Parameter WithdrawalQueue.getAvailable(uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#110) is not in mixedCase
Parameter WithdrawalQueue.lockWithdrawals(uint256,uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#117) is not in mixedCase
Parameter WithdrawalQueue.lockWithdrawals(uint256,uint256)._time (src/lib/pools/WithdrawalQueue.sol#117) is not in mixedCase
Parameter WithdrawalQueue.tokenURI(uint256)._id (src/lib/pools/WithdrawalQueue.sol#134) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._bytes (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._start (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._length (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.toAddress(bytes,uint256)._bytes (src/lib/utils/BytesLib.sol#72) is not in mixedCase
Parameter BytesLib.toAddress(bytes,uint256)._start (src/lib/utils/BytesLib.sol#72) is not in mixedCase
Parameter BytesLib.toUint24(bytes,uint256)._bytes (src/lib/utils/BytesLib.sol#84) is not in mixedCase
Parameter BytesLib.toUint24(bytes,uint256)._start (src/lib/utils/BytesLib.sol#84) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.LoanOffer)._loanOffer (src/lib/utils/Hash.sol#39) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.ExecutionData)._executionData (src/lib/utils/Hash.sol#69) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.SignableRepaymentData)._repaymentData (src/lib/utils/Hash.sol#93) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.Loan)._loan (src/lib/utils/Hash.sol#104) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.RenegotiationOffer)._refinanceOffer (src/lib/utils/Hash.sol#129) is not in mixedCase
Parameter Hash.hash(IAuctionLoanLiquidator.Auction)._auction (src/lib/utils/Hash.sol#154) is not in mixedCase
Parameter Interest.getInterest(IMultiSourceLoan.LoanOffer)._loanOffer (src/lib/utils/Interest.sol#15) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._amount (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._aprBps (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._duration (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getTotalOwed(IMultiSourceLoan.Loan,uint256)._loan (src/lib/utils/Interest.sol#23) is not in mixedCase
Parameter Interest.getTotalOwed(IMultiSourceLoan.Loan,uint256)._timestamp (src/lib/utils/Interest.sol#23) is not in mixedCase
Parameter TwoStepOwned.requestTransferOwner(address)._newOwner (src/lib/utils/TwoStepOwned.sol#27) is not in mixedCase
Variable TwoStepOwned.MIN_WAIT_TIME (src/lib/utils/TwoStepOwned.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._tokenId (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._bytesPerTokenId (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._tokenIdList (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateNFTBitVector(uint256,bytes)._tokenId (src/lib/utils/ValidatorHelpers.sol#72) is not in mixedCase
Parameter ValidatorHelpers.validateNFTBitVector(uint256,bytes)._bitVector (src/lib/utils/ValidatorHelpers.sol#72) is not in mixedCase
Parameter WithProtocolFee.updateProtocolFee(WithProtocolFee.ProtocolFee)._newProtocolFee (src/lib/utils/WithProtocolFee.sol#59) is not in mixedCase
Parameter NftBitVectorValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/NftBitVectorValidator.sol#10) is not in mixedCase
Parameter NftBitVectorValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/NftBitVectorValidator.sol#10) is not in mixedCase
Parameter NftPackedListValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/NftPackedListValidator.sol#12) is not in mixedCase
Parameter NftPackedListValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/NftPackedListValidator.sol#12) is not in mixedCase
Parameter RangeValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/RangeValidator.sol#9) is not in mixedCase
Parameter RangeValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/RangeValidator.sol#9) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable LiquidationDistributor.distribute(address,uint256,IMultiSourceLoan.Loan).thisTranche_scope_1 (src/lib/LiquidationDistributor.sol#70) is too similar to LiquidationDistributor.distribute(address,uint256,IMultiSourceLoan.Loan).thisTranche_scope_3 (src/lib/LiquidationDistributor.sol#87)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x10000000000000000000000000000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#176-179)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x1000000000000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#180-183)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x10000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#184-187)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x1000000 (lib/solmate/src/utils/FixedPointMathLib.sol#188-191)
SafeTransferLib.safeTransferFrom(ERC20,address,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#31-63) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeTransferFrom_asm_0,0x23b872dd00000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#45)
SafeTransferLib.safeTransfer(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#65-95) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeTransfer_asm_0,0xa9059cbb00000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#78)
SafeTransferLib.safeApprove(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#97-127) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeApprove_asm_0,0x095ea7b300000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#110)
BytesLib.toAddress(bytes,uint256) (src/lib/utils/BytesLib.sol#72-82) uses literals with too many digits:
	- tempAddress = mload(uint256)(_bytes + 0x20 + _start) / 0x1000000000000000000000000 (src/lib/utils/BytesLib.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
AaveUsdcBaseInterestAllocator._PRINCIPAL_PRECISION (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#24) is never used in AaveUsdcBaseInterestAllocator (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#17-139)
AaveUsdcBaseInterestAllocator._SECONDS_PER_YEAR (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#25) is never used in AaveUsdcBaseInterestAllocator (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#17-139)
LidoEthBaseInterestAllocator._PRINCIPAL_PRECISION (src/lib/pools/LidoEthBaseInterestAllocator.sol#29) is never used in LidoEthBaseInterestAllocator (src/lib/pools/LidoEthBaseInterestAllocator.sol#17-174)
PoolOfferHandler._BPS (src/lib/pools/PoolOfferHandler.sol#34) is never used in PoolOfferHandler (src/lib/pools/PoolOfferHandler.sol#18-156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Slither:. analyzed (88 contracts with 94 detectors), 963 result(s) found
